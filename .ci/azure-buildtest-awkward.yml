trigger:
  batch: true
  branches:
    include:
      - "*"
  paths:
    exclude:
      - README.md
      - VERSION_INFO
      - .ci/azure-deploy-awkward.yml
      - .ci/linux-build.sh
      - docs/*
      - studies/*

pr:
  branches:
    exclude:
      - "*"

jobs:
  - job: Windows

    pool:
      vmImage: "vs2017-win2016"

    strategy:
      matrix:
        "py27-32bit":
          python.version: "2.7"
          python.architecture: "x86"
          numpy.version: "1.16.5"
        "py27-64bit":
          python.version: "2.7"
          python.architecture: "x64"
          numpy.version: "1.16.5"
        "py35-64bit":
          python.version: "3.5"
          python.architecture: "x64"
          numpy.version: "latest"
        "py36-64bit":
          python.version: "3.6"
          python.architecture: "x64"
          numpy.version: "latest"
        "py37-32bit":
          python.version: "3.7"
          python.architecture: "x86"
          numpy.version: "latest"
        "py37-64bit":
          python.version: "3.7"
          python.architecture: "x64"
          numpy.version: "latest"
        "py38-32bit":
          python.version: "3.8"
          python.architecture: "x86"
          numpy.version: "latest"
        "py38-64bit":
          python.version: "3.8"
          python.architecture: "x64"
          numpy.version: "latest"

    steps:
      - checkout: self
        submodules: recursive

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: '$(python.architecture)'
        displayName: 'Python $(python.version)'

      - script: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-test.txt
          python -c "import numpy; print(numpy.__version__)"
          python -c "import pytest; print(pytest.__version__)"
        displayName: "Install"

      - script: |
          python setup.py build
          python -m pytest -vv tests
        displayName: "Build and test"

  - job: MacOS

    pool:
      vmImage: "macOS-10.14"

    strategy:
      matrix:
        "py27":
          python.version: "2.7"
          python.architecture: "x64"
          numpy.version: "1.16.5"
        "py35":
          python.version: "3.5"
          python.architecture: "x64"
          numpy.version: "latest"
        "py36":
          python.version: "3.6"
          python.architecture: "x64"
          numpy.version: "latest"
        "py37":
          python.version: "3.7"
          python.architecture: "x64"
          numpy.version: "latest"
        "py38":
          python.version: "3.8"
          python.architecture: "x64"
          numpy.version: "latest"

    steps:
      - checkout: self
        submodules: recursive

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: '$(python.architecture)'
        displayName: 'Python $(python.version)'

      - script: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-test.txt
          python -c "import numpy; print(numpy.__version__)"
          python -c "import pytest; print(pytest.__version__)"
        displayName: "Install"

      - script: |
          python setup.py build
          python -m pytest -vv tests
        displayName: "Build and test"

  - job: Linux

    pool:
      vmImage: "ubuntu-16.04"

    strategy:
      matrix:
        "py27-np13":
          python.version: "2.7"
          python.architecture: "x64"
          numpy.version: "1.13.1"
        "py27-np16":
          python.version: "2.7"
          python.architecture: "x64"
          numpy.version: "1.16.5"
        "py35-np13":
          python.version: "3.5"
          python.architecture: "x64"
          numpy.version: "1.13.1"
        "py36-np14":
          python.version: "3.6"
          python.architecture: "x64"
          numpy.version: "1.14.5"
        "py37-np14":
          python.version: "3.7"
          python.architecture: "x64"
          numpy.version: "1.14.5"
        "py38-np*":
          python.version: "3.8"
          python.architecture: "x64"
          numpy.version: "latest"

    steps:
      - checkout: self
        submodules: recursive

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: '$(python.architecture)'
        displayName: 'Python $(python.version)'

      - script: |
          python -m pip install --upgrade pip
          if [ $(numpy.version) = "latest" ]; then
            python -m pip install -r requirements.txt;
          else
            sed 's/numpy>=1.13.1/numpy==$(numpy.version)/' requirements.txt > requirements2.txt;
            python -m pip install -r requirements2.txt;
          fi
          python -m pip install -r requirements-test.txt
          python -c "import numpy; print(numpy.__version__)"
          python -c "import pytest; print(pytest.__version__)"
        displayName: "Install"

      - script: |
          python setup.py build
          python -m pytest -vv tests
        displayName: "Build and test"
