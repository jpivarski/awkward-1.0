name: Build Test

on:
  pull_request:
    paths-ignore:
      - README.md
      - VERSION_INFO
      - .ci/**
      - .readthedocs.yml
      - docs-img/**
      - docs-doxygen/**
      - docs-sphinx/**
      - studies/**

  schedule:
    - cron: 0 12 1 * *

  workflow_dispatch:

concurrency:
  group: 'build-test-${{ github.head_ref || github.run_id }}'
  cancel-in-progress: true

jobs:
  Windows:
    strategy:
      matrix:
        python-version:
          - '3.11'
          - '3.10'
          - '3.9'
          - '3.8'
          - '3.7'

        python-architecture:
          - x64

        include:
          - python-version: '3.9'
            python-architecture: x86

    runs-on: windows-2019

    env:
      PIP_ONLY_BINARY: cmake

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: 'Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'
          architecture: '${{ matrix.python-architecture }}'

      - name: Install requirements
        run: |
          python3 -m pip install `
            -r requirements-dev.txt `
            -r requirements-test.txt `
            build

      - name: Prepare generated build sources
        run: |
          python3 dev/generate-kernel-signatures.py
          python3 dev/copy-cpp-headers.py

      - name: Cache awkward-cpp wheel
        id: cache-awkward-cpp-wheel
        uses: actions/cache@v3
        with:
          path: ./awkward-cpp/dist
          key: ${{ github.job }}-${{ matrix.python-version }}-${{ hashFiles('awkward-cpp/**') }}

      - name: Build awkward-cpp wheel
        if: steps.cache-awkward-cpp-wheel.outputs.cache-hit != 'true'
        run: python3 -m build -w awkward-cpp

      - name: Install awkward-cpp
        run: python3 -m pip install -v awkward-cpp/dist/*.whl

      - name: Build & install awkward
        run: python3 -m pip install -v .

      - name: Check if kernel specification is sorted
        run: python dev/kernel-diagnostics.py --check-spec-sorted

      - name: Generate Kernel tests
        run: python dev/generate-tests.py

      - name: Test specification
        run: python -m pytest -vv -rs awkward-cpp/tests-spec

      - name: Test specification with explicitly defined values
        run: python -m pytest -vv -rs awkward-cpp/tests-spec-explicit

      - name: Test CPU kernels
        run: python -m pytest -vv -rs awkward-cpp/tests-cpu-kernels

      - name: Test
        run: python -m pytest -vv -rs tests

  MacOS:
    strategy:
      matrix:
        python-version:
          - '3.11'
          - '3.10'
          - '3.9'
          - '3.8'
          - '3.7'

    runs-on: macOS-11

    env:
      PIP_ONLY_BINARY: cmake

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: 'Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Install requirements
        run: |
          python3 -m pip install \
            -r requirements-dev.txt \
            -r requirements-test.txt \
            build

      - name: Prepare generated build sources
        run: |
          python3 dev/generate-kernel-signatures.py
          python3 dev/copy-cpp-headers.py

      - name: Cache awkward-cpp wheel
        id: cache-awkward-cpp-wheel
        uses: actions/cache@v3
        with:
          path: ./awkward-cpp/dist
          key: ${{ github.job }}-${{ matrix.python-version }}-${{ hashFiles('awkward-cpp/**') }}

      - name: Build awkward-cpp wheel
        if: steps.cache-awkward-cpp-wheel.outputs.cache-hit != 'true'
        run: python3 -m build -w ./awkward-cpp

      - name: Install awkward-cpp
        run: python3 -m pip install -v ./awkward-cpp/dist/*.whl

      - name: Build & install awkward
        run: python3 -m pip install -v .

      - name: Check if kernel specification is sorted
        run: python dev/kernel-diagnostics.py --check-spec-sorted

      - name: Generate Kernel tests
        run: python dev/generate-tests.py

      - name: Test specification
        run: python -m pytest -vv -rs awkward-cpp/tests-spec

      - name: Test specification with explicitly defined values
        run: python -m pytest -vv -rs awkward-cpp/tests-spec-explicit

      - name: Test CPU kernels
        run: python -m pytest -vv -rs awkward-cpp/tests-cpu-kernels

      - name: Test
        run: python -m pytest -vv -rs tests

  Linux:
    strategy:
      matrix:
        python-version:
          - '3.11'
          - '3.10'
          - '3.9'
          - '3.8'
          - '3.7'
        numpy-package:
          - "numpy"
        include:
          - python-version: '3.7'
            numpy-package: "oldest-supported-numpy"

    runs-on: ubuntu-20.04

    env:
      PIP_ONLY_BINARY: cmake
      NUMPY_VERSION: '${{ matrix.numpy-version }}'

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: 'Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Install requirements
        run: |
          python3 -m pip install \
            -r requirements-dev.txt \
            -r requirements-test.txt \
            "${{ matrix.numpy-package }}" \
            build

      - name: Prepare generated build sources
        run: |
          python3 dev/generate-kernel-signatures.py
          python3 dev/copy-cpp-headers.py

      - name: Cache awkward-cpp wheel
        id: cache-awkward-cpp-wheel
        uses: actions/cache@v3
        with:
          path: ./awkward-cpp/dist
          key: ${{ github.job }}-${{ matrix.python-version }}-${{ hashFiles('awkward-cpp/**') }}

      - name: Build awkward-cpp wheel
        if: steps.cache-awkward-cpp-wheel.outputs.cache-hit != 'true'
        run: python3 -m build -w ./awkward-cpp

      - name: Install awkward-cpp
        run: python3 -m pip install -v ./awkward-cpp/dist/*.whl

      - name: Build & install awkward
        run: python3 -m pip install -v .

      - name: Print versions
        run: python -m pip list

      - name: Check if kernel specification is sorted
        run: python dev/kernel-diagnostics.py --check-spec-sorted

      - name: Generate Kernel tests
        run: python dev/generate-tests.py

      - name: Test specification
        run: python -m pytest -vv -rs awkward-cpp/tests-spec

      - name: Test specification with explicitly defined values
        run: python -m pytest -vv -rs awkward-cpp/tests-spec-explicit

      - name: Test CPU kernels
        run: python -m pytest -vv -rs awkward-cpp/tests-cpu-kernels

      - name: Test
        run: >-
          python -m pytest -vv -rs tests --cov=awkward --cov-report=term
          --cov-report=xml

      - name: Upload Codecov results
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.9'

  Linux-ROOT:
    strategy:
      matrix:
        python-version:
          - '3.8'

    runs-on: ubuntu-20.04

    env:
      PIP_ONLY_BINARY: cmake

    timeout-minutes: 30

    # Required for miniconda to activate conda
    defaults:
      run:
        shell: "bash -l {0}"

    steps:
      - uses: "actions/checkout@v3"
        with:
          submodules: true

      - name: Setup Python via Conda
        uses: mamba-org/provision-with-micromamba@main
        with:
          # Cache invalidates daily by default
          cache-env: true
          environment-file: false
          environment-name: awkward
          channels:
            - conda-forge
          extra-specs: |
             python=${{ env.PYTHON_VERSION }}
             numpy
             root

      - name: Install requirements
        run: |
          python3 -m pip install \
            -r requirements-dev.txt \
            -r requirements-test.txt \
            "${{ matrix.numpy-package }}" \
            build

      - name: Prepare generated build sources
        run: |
          python3 dev/generate-kernel-signatures.py
          python3 dev/copy-cpp-headers.py

      - name: Cache awkward-cpp wheel
        id: cache-awkward-cpp-wheel
        uses: actions/cache@v3
        with:
          path: ./awkward-cpp/dist
          key: ${{ github.job }}-${{ matrix.python-version }}-${{ hashFiles('awkward-cpp/**') }}

      - name: Build awkward-cpp wheel
        if: steps.cache-awkward-cpp-wheel.outputs.cache-hit != 'true'
        run: python3 -m build -w ./awkward-cpp

      - name: Install awkward-cpp
        run: python3 -m pip install -v ./awkward-cpp/dist/*.whl

      - name: Build & install awkward
        run: python3 -m pip install -v .

      - name: Print versions
        run: python -m pip list

      - name: Test
        run: >-
          python -m pytest -vv -rs tests
