name: Wheels

on:
  workflow_dispatch:
  release:
    types:
    - published


jobs:
  make_sdist:
    name: "Make SDist"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: "Wheel: ${{ matrix.type }} ${{ matrix.arch }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [auto64]
        build: ["cp*", "pp*"]

        include:
        - os: macos-latest
          type: "Universal"
          arch: universal2
          build: "cp*"

        - os: windows-latest
          arch: auto64
          build: "cp*"

        - os: windows-latest
          arch: auto32
          build: "cp{37,38,39}-*"


    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: pypa/cibuildwheel@v2.10.0
      env:
        CIBW_BUILD: ${{ matrix.build }}
        CIBW_ARCHS: ${{ matrix.arch }}

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl


  build_alt_wheels:
    name: "Wheel: ${{ matrix.python }} on ${{ matrix.arch }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [37, 38, 39, 310, 311]
        arch: [aarch64]
    steps:

    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: docker/setup-qemu-action@v2.0.0

    - uses: pypa/cibuildwheel@v2.10.0
      env:
        CIBW_BUILD: cp${{ matrix.python }}-*
        CIBW_ARCHS: ${{ matrix.arch }}

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  upload_all:
    needs: [build_wheels, build_alt_wheels, make_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write
    environment:
      name: "deploy-pypi"
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@v1.8.10
