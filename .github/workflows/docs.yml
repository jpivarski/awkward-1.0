name: Docs
on:
  push:
    branches:
      - main
      - docs
  pull_request:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  Sphinx:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: docs-${{ github.job }}
    - name: Use ccache
      run: |
        echo "/usr/lib/ccache" >> $GITHUB_PATH
        echo "/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install Pip
      run: python -m pip install --upgrade pip
    - name: Install Awkward Array
      run: python -m pip install -v .
    - name: Install WASM requirements
      run: python -m pip install -r requirements-wasm.txt
    - name: Install EMSDK
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: 3.1.14
    - name: Build WASM package
      run: |
        rm -rf build
        CMAKE_ARGS="-DEMSCRIPTEN=1" pyodide build --exports whole_archive
        mkdir -p docs-sphinx/lite/pypi
        cp dist/awkward*wasm32.whl docs-sphinx/lite/pypi/
    - name: Install requirements
      run: |
        python -m pip install -r docs-sphinx/requirements.txt
        sudo apt-get install -y doxygen
    - name: Generate documentation
      run: sphinx-build -M html docs-sphinx/ docs-sphinx/_build/
    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs-sphinx/_build/html
    - name: Upload Jupyter Book cache
      uses: actions/upload-artifact@v3
      with:
        name: jupyter-cache
        path: docs-sphinx/_build/.jupyter_cache
    - name: Upload Awkward WASM wheel
      uses: actions/upload-artifact@v3
      with:
        name: awkward-wasm-wheel
        path: dist/awkward*wasm32.whl
    - name: Trigger RTD Build
      # NB: head_ref is only valid for PR triggers
      run: curl -X POST -d "branches=${{ github.ref_name }}" -d "token=${{ secrets.RTD_WEBHOOK_TOKEN }}" "${{ secrets.RTD_WEBHOOK_URL }}"
