name: Docs
on:
  push:
    branches:
      - main
      - docs
  pull_request:
  release:
    types: [released]
  workflow_dispatch:
env:
  PYTHON_VERSION: "3.10"
jobs:
  awkward-wasm:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Install ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: awkward-wasm-${{ github.job }}
    - name: Install EMSDK
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: 3.1.14
    - name: Setup ccache
      run: |
        echo "/usr/lib/ccache" >> $GITHUB_PATH
        echo "/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ env.PYTHON_VERSION }}"
    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-wasm.txt
    - name: Build wheel
      run: CMAKE_ARGS="-DEMSCRIPTEN=1 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache" pyodide build --exports whole_archive
    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: awkward-wasm-wheel
        path: dist/awkward*wasm32.whl
  awkward-x86-64:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Install ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: awkward-${{ github.job }}
    - name: Setup ccache
      run: |
        echo "/usr/lib/ccache" >> $GITHUB_PATH
        echo "/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ env.PYTHON_VERSION }}"
    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    - name: Build wheel
      run: python -m build -w
    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: awkward-x86-64-wheel
        path: dist/awkward*.whl
  docs:
    runs-on: ubuntu-22.04
    needs: [awkward-wasm, awkward-x86-64]
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ env.PYTHON_VERSION }}"
    - name: Download WASM wheel
      uses: actions/download-artifact@v3
      with:
        name: awkward-wasm-wheel
        path: docs-sphinx/lite/pypi
    - name: Download x86_64 wheel
      uses: actions/download-artifact@v3
      with:
        name: awkward-x86-64-wheel
        path: dist
    - name: Install requirements
      run: |
        ls -R docs-sphinx/lite
        sudo apt-get install -y doxygen
        python -m pip install -r docs-sphinx/requirements.txt
        python -m pip install dist/awkward*.whl
    - name: Generate documentation
      run: sphinx-build -M html . _build/
      working-directory: docs-sphinx
    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs-sphinx/_build/html
    - name: Upload Jupyter Book cache
      uses: actions/upload-artifact@v3
      with:
        name: jupyter-cache
        path: docs-sphinx/_build/.jupyter_cache
    - name: Trigger RTD Build
      # NB: head_ref is only valid for PR triggers
      run: curl -X POST -d "branches=${{ github.ref_name }}" -d "token=${{ secrets.RTD_WEBHOOK_TOKEN }}" "${{ secrets.RTD_WEBHOOK_URL }}"
