name: Docs
on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [released]
  workflow_dispatch:

concurrency:
  group: 'docs-${{ github.head_ref || github.run_id }}'
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.10.6"
  SOURCE_DATE_EPOCH: "1668811211"

jobs:
  awkward-cpp-wasm:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ env.PYTHON_VERSION }}"

    - name: Generate build files
      run: pipx run nox -s prepare -- --headers --signatures

    - name: Cache wheel
      id: cache-awkward-cpp-wasm-wheel
      uses: actions/cache@v3
      with:
        path: ./awkward-cpp/dist
        key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-awkward-cpp-wasm-${{ hashFiles('awkward-cpp/**') }}

    - name: Install EMSDK
      uses: mymindstorm/setup-emsdk@v11
      if: steps.cache-awkward-cpp-wasm-wheel.outputs.cache-hit != 'true'
      with:
        version: 3.1.14

    - name: Build wheel
      if: steps.cache-awkward-cpp-wasm-wheel.outputs.cache-hit != 'true'
      run: |
        # pyodide-build doesn't work out of the box with pipx
        python3 -m pip install pyyaml pyodide-build==0.21.0
        export CMAKE_ARGS="-DEMSCRIPTEN=1"
        pyodide build --exports whole_archive
      working-directory: awkward-cpp

    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: awkward-cpp-wasm
        path: awkward-cpp/dist/awkward*wasm32.whl

  awkward-cpp-x86-64:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

      # TODO: remove this once mamba-org/mamba#1726 is fixed
      #       and replace with `-r requirements.txt` in a
      #       non-template `environment.yml`
    - name: Template environment.yml
      run: pipx run --spec cogapp cog -o environment.yml environment.yml.cog
      working-directory: docs

      # Technically this give us an environment that is incompatible with
      # the wheel built in the awkward-x86-64 job if the environments
      # solve with different external library versions. By default,
      # ROOT uses cxx-compiler too, so hopefully this won't be an issue
    - name: Setup Python via Conda
      uses: mamba-org/provision-with-micromamba@main
      with:
        # Cache invalidates daily by default
        cache-env: true
        environment-file: docs/environment.yml
        extra-specs: |
           python=${{ env.PYTHON_VERSION }}
           doxygen

    - name: Generate build files
      run: pipx run nox -s prepare -- --headers --signatures

    - name: Cache wheel
      id: cache-awkward-cpp-x86-64-wheel
      uses: actions/cache@v3
      with:
        path: ./awkward-cpp/dist
        key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-awkward-x86-64-wasm-${{ hashFiles('awkward-cpp/**') }}

    - name: Build wheel
      if: steps.cache-awkward-cpp-x86-64-wheel.outputs.cache-hit != 'true'
      run: pipx run build -w ./awkward-cpp

    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: awkward-cpp-x86-64
        path: awkward-cpp/dist/awkward*.whl

  awkward:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Generate build files
      run: pipx run nox -s prepare -- --headers --signatures

    - name: Build wheel
      run: pipx run build -w

    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: awkward
        path: dist/awkward*.whl


  build-docs:
    runs-on: ubuntu-22.04
    needs: [awkward-cpp-wasm, awkward-cpp-x86-64, awkward]
    defaults:
      run:
        # Ensure conda env is activated
        shell: "bash -l {0}"
    steps:
    - uses: actions/checkout@v3

      # TODO: remove this once mamba-org/mamba#1726 is fixed
      #       and replace with `-r requirements.txt` in a
      #       non-template `environment.yml`
    - name: Template environment.yml
      run: pipx run --spec cogapp cog -o environment.yml environment.yml.cog
      working-directory: docs

      # Technically this give us an environment that is incompatible with
      # the wheel built in the awkward-x86-64 job if the environments
      # solve with different external library versions. By default,
      # ROOT uses cxx-compiler too, so hopefully this won't be an issue
    - name: Setup Python via Conda
      uses: mamba-org/provision-with-micromamba@main
      with:
        # Cache invalidates daily by default
        cache-env: true
        environment-file: docs/environment.yml
        extra-specs: |
           python=${{ env.PYTHON_VERSION }}
           doxygen

    - name: Download awkward wheel
      uses: actions/download-artifact@v3
      with:
        name: awkward
        path: dist

    - name: Copy awkward wheel to JupyterLite
      run: |
        mkdir -p docs/lite/pypi/
        cp dist/awkward*.whl docs/lite/pypi/

    - name: Download & copy awkward-cpp WASM wheel to JupyterLite
      uses: actions/download-artifact@v3
      with:
        name: awkward-cpp-wasm
        path: docs/lite/pypi

    - name: Download awkward-cpp x86_64 wheel
      uses: actions/download-artifact@v3
      with:
        name: awkward-cpp-x86-64
        path: dist

    - name: Install awkward and awkward-cpp wheels
      run: python -m pip install dist/awkward*.whl

    - name: Generate build files
      run: pipx run nox -s prepare -- --docs --headers

    - name: Generate C++ documentation
      run: doxygen
      working-directory: awkward-cpp/docs

    - name: Copy C++ documentation
      run: cp -r awkward-cpp/docs/html/ docs/_static/doxygen

    - name: Generate Python documentation
      run: sphinx-build -M html . _build/
      working-directory: docs

    - name: Upload Pages artefact
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs/_build/html

    - name: Upload Jupyter Book cache
      uses: actions/upload-artifact@v3
      with:
        name: jupyter-cache
        path: docs/_build/.jupyter_cache

  deploy-branch-preview:
    runs-on: ubuntu-22.04
    needs: [build-docs]
    # We can only deploy for PRs on host repo
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
    environment: docs-preview
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    env:
      S3_BUCKET: "awkward-array.org-test"
      S3_WEBSITE_URL: "http://awkward-array.org-test.s3-website.eu-west-2.amazonaws.com"
    steps:
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-west-2
        role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
    - name: Download rendered docs
      uses: actions/download-artifact@v3
      with:
        name: docs
        path: docs
    - name: Sync artefacts
      run: |
        aws s3 sync docs/ "s3://${S3_BUCKET}/${{ github.head_ref }}"
        # TODO: invalidate cloudfront
    - name: Edit PR description
      uses: actions/github-script@v6
      with:
        script: |
            const script = require('./dev/docs-edit-message.js');
            console.log(script(github, context, "${{ env.S3_WEBSITE_URL }}/${{ github.head_ref }}"));
