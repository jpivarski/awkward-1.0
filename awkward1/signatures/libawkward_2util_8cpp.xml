<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="libawkward_2util_8cpp" kind="file" language="C++">
    <compoundname>util.cpp</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">sstream</includes>
    <includes local="no">set</includes>
    <includes local="yes">rapidjson/document.h</includes>
    <includes local="yes">awkward/cpu-kernels/identities.h</includes>
    <includes local="yes">awkward/cpu-kernels/getitem.h</includes>
    <includes local="yes">awkward/cpu-kernels/operations.h</includes>
    <includes local="yes">awkward/util.h</includes>
    <includes local="yes">awkward/Identities.h</includes>
    <incdepgraph>
      <node id="8">
        <label>awkward/cpu-kernels/operations.h</label>
      </node>
      <node id="1">
        <label>src/libawkward/util.cpp</label>
        <link refid="libawkward_2util_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>awkward/util.h</label>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>awkward/cpu-kernels/getitem.h</label>
      </node>
      <node id="5">
        <label>rapidjson/document.h</label>
      </node>
      <node id="6">
        <label>awkward/cpu-kernels/identities.h</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>awkward/Identities.h</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceawkward">awkward</innernamespace>
    <innernamespace refid="namespaceawkward_1_1util">awkward::util</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceawkward_1_1util_1a59e9e406e10c16cbe5a43e297fac511d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; RecordLookup &gt;</type>
        <definition>std::shared_ptr&lt;RecordLookup&gt; awkward::util::init_recordlookup</definition>
        <argsstring>(int64_t numfields)</argsstring>
        <name>init_recordlookup</name>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="20" column="21" bodyfile="src/libawkward/util.cpp" bodystart="20" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a60c549ed8a8040819b34954813813fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t awkward::util::fieldindex</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, const std::string &amp;key, int64_t numfields)</argsstring>
        <name>fieldindex</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="28" column="13" bodyfile="src/libawkward/util.cpp" bodystart="28" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a96d7483cb27ab5c1a85412fa5348528d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string awkward::util::key</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, int64_t fieldindex, int64_t numfields)</argsstring>
        <name>key</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fieldindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="52" column="23" bodyfile="src/libawkward/util.cpp" bodystart="52" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7edf467c33f32026419e65ef0b80e712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::haskey</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, const std::string &amp;key, int64_t numfields)</argsstring>
        <name>haskey</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="64" column="10" bodyfile="src/libawkward/util.cpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5a6b04fdbf7f630a775ec95c968a12d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt;</type>
        <definition>const std::vector&lt;std::string&gt; awkward::util::keys</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, int64_t numfields)</argsstring>
        <name>keys</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="74" column="23" bodyfile="src/libawkward/util.cpp" bodystart="74" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad26802b2772a48bb0589859e3c138100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::parameter_equals</definition>
        <argsstring>(const Parameters &amp;parameters, const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>parameter_equals</name>
        <param>
          <type>const Parameters &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="88" column="10" bodyfile="src/libawkward/util.cpp" bodystart="88" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa515755f3ae5039f0e9ea330e823ac37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::parameters_equal</definition>
        <argsstring>(const Parameters &amp;self, const Parameters &amp;other)</argsstring>
        <name>parameters_equal</name>
        <param>
          <type>const Parameters &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const Parameters &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="104" column="10" bodyfile="src/libawkward/util.cpp" bodystart="104" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0c0ee9730e162bb57e17694a503dafa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void awkward::util::handle_error</definition>
        <argsstring>(const struct Error &amp;err, const std::string &amp;classname, const Identities *identities)</argsstring>
        <name>handle_error</name>
        <param>
          <type>const struct Error &amp;</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>classname</declname>
        </param>
        <param>
          <type>const Identities *</type>
          <declname>identities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="122" column="10" bodyfile="src/libawkward/util.cpp" bodystart="122" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a945d62c19d05d0598581fbae333c8fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string awkward::util::quote</definition>
        <argsstring>(const std::string &amp;x, bool doublequote)</argsstring>
        <name>quote</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>doublequote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="143" column="17" bodyfile="src/libawkward/util.cpp" bodystart="143" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a615ff48b62091268459c1c8b3a65bc45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::subset</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;super, const std::vector&lt; std::string &gt; &amp;sub)</argsstring>
        <name>subset</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>super</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="153" column="10" bodyfile="src/libawkward/util.cpp" bodystart="153" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35cbb19ed4389f759b25ecc694448ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listoffsetarray&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const uint32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listoffsetarray&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="173" column="5" bodyfile="src/libawkward/util.cpp" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a73949ff843b38ba437f19732c876ca24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listoffsetarray&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const int64_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listoffsetarray&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="177" column="5" bodyfile="src/libawkward/util.cpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0ef7b0340bf22a52577220dc84a9073f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listarray&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listarray&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="182" column="5" bodyfile="src/libawkward/util.cpp" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7a6e0e64af7feda69b7f12da1e297d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listarray&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const int64_t *fromstarts, const int64_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listarray&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="186" column="5" bodyfile="src/libawkward/util.cpp" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35cdf735524b577a33696b6dfbe507c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="191" column="5" bodyfile="src/libawkward/util.cpp" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a332e036036f0a2a7b6ae1ccbd5fb9328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="195" column="5" bodyfile="src/libawkward/util.cpp" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6669b4753da68138261314266664870f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="199" column="5" bodyfile="src/libawkward/util.cpp" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af6d5697f061dd5b2bc6d6371fab63406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="204" column="5" bodyfile="src/libawkward/util.cpp" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5994a80cfed68d5ca9a74ec77532eec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="208" column="5" bodyfile="src/libawkward/util.cpp" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab91ff6d314c26700c4e4130b6ab4e6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="212" column="5" bodyfile="src/libawkward/util.cpp" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ace2f8fb19c1c5895a11057e5f06ba44a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tooffsets, int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="217" column="5" bodyfile="src/libawkward/util.cpp" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35f040e2474502f3ebcd72814d81697d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tooffsets, int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="221" column="5" bodyfile="src/libawkward/util.cpp" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a27301acf05d62d2cddc63402f113186d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="225" column="5" bodyfile="src/libawkward/util.cpp" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a821d22c5eb2612a50ccd25fad385d50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *total, const int32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="230" column="5" bodyfile="src/libawkward/util.cpp" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab7818ea817b037e54c287c5e6209e8a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *total, const uint32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="234" column="5" bodyfile="src/libawkward/util.cpp" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad129226cfdbe60197ecfef8bb310799d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *total, const int64_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="238" column="5" bodyfile="src/libawkward/util.cpp" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a24d53416cb24aeef4b57ca3b206006f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const int32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="243" column="5" bodyfile="src/libawkward/util.cpp" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab0ff064b87b541a65ddcba92a1b2292e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const uint32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="247" column="5" bodyfile="src/libawkward/util.cpp" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a55f52d86ee9c4cc0959c9d5123830143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const int64_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="251" column="5" bodyfile="src/libawkward/util.cpp" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af4bc0f3e2a70ded4d83275a82befbf25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="256" column="5" bodyfile="src/libawkward/util.cpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5ed659284b8769b5f1a86c4f80b3d91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="260" column="5" bodyfile="src/libawkward/util.cpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1e4359f0b4b6cd14f0c3655abc01efa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="264" column="5" bodyfile="src/libawkward/util.cpp" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3c9079e2d6d2eff270b7df911801b07e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="269" column="5" bodyfile="src/libawkward/util.cpp" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0a5ce7851259ae74844da07ed068ab7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="273" column="5" bodyfile="src/libawkward/util.cpp" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3853c79e8dfd566edb8c1c2affc70934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="277" column="5" bodyfile="src/libawkward/util.cpp" bodystart="277" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a56c8f0daa473f11d34e367c7f6d7100e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tostarts, int32_t *tostops, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="282" column="5" bodyfile="src/libawkward/util.cpp" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab998cec0a24c51454bdf93e04ee173a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tostarts, uint32_t *tostops, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="286" column="5" bodyfile="src/libawkward/util.cpp" bodystart="286" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a02e137f16fe72a0671a42b43cc5bb543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tostarts, int64_t *tostops, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="290" column="5" bodyfile="src/libawkward/util.cpp" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1adabbc3fd9ee2f199f2360a9abf874e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tocount, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="295" column="5" bodyfile="src/libawkward/util.cpp" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aad6e08abe78d74e3b42b950b0a8dd2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tocount, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="299" column="5" bodyfile="src/libawkward/util.cpp" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5c847326109e9069e99cdb789c7fa303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="303" column="5" bodyfile="src/libawkward/util.cpp" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9999a0418c342ea8b55aee4aa991654c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="308" column="5" bodyfile="src/libawkward/util.cpp" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a46d432cc0e7521b442c5fcfc4a1edf26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="312" column="5" bodyfile="src/libawkward/util.cpp" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a45bf853853c0cf2101311be1df2731e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="316" column="5" bodyfile="src/libawkward/util.cpp" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a2a273f9fb3238ffb993058f729d5217f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const int32_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="321" column="5" bodyfile="src/libawkward/util.cpp" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ae684ec0bd651e580283384b4d0fc0af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const uint32_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="325" column="5" bodyfile="src/libawkward/util.cpp" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0e54f351e82388b7cc08a3ba6b60655f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const int64_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="329" column="5" bodyfile="src/libawkward/util.cpp" bodystart="329" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aca5f1e14100c19931238421a073e50f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tolen, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="334" column="5" bodyfile="src/libawkward/util.cpp" bodystart="334" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a97be6a13ed51d9a183a853731d5fdd94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tolen, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="338" column="5" bodyfile="src/libawkward/util.cpp" bodystart="338" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a63f6ba29e4d11425f7b86dd5e58e579e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tolen, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="342" column="5" bodyfile="src/libawkward/util.cpp" bodystart="342" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abe23cccf3145a78dd81d4fb0ac9c3207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="347" column="5" bodyfile="src/libawkward/util.cpp" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac42d6252b768793e8715a97640ad3f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="351" column="5" bodyfile="src/libawkward/util.cpp" bodystart="351" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a78332e9832f380f0f193c2c69869b01e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="355" column="5" bodyfile="src/libawkward/util.cpp" bodystart="355" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aea5171bc10a588aa86bf198071707c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_flatten_nextcarry_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_flatten_nextcarry_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="360" column="5" bodyfile="src/libawkward/util.cpp" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abc67b80fe1a320fd621f6cf55bd36650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_flatten_nextcarry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_flatten_nextcarry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="364" column="5" bodyfile="src/libawkward/util.cpp" bodystart="364" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1d56d4f9ab9c383037c991fda5370b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_numnull&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *numnull, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex)</argsstring>
        <name>awkward_indexedarray_numnull&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>numnull</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="369" column="5" bodyfile="src/libawkward/util.cpp" bodystart="369" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad00dafc7121e5db0300ac3402cb86ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_numnull&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *numnull, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex)</argsstring>
        <name>awkward_indexedarray_numnull&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>numnull</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="373" column="5" bodyfile="src/libawkward/util.cpp" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a36e85b0bbeb595c549b2aa2de24ae42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int32_t *toindex, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="378" column="5" bodyfile="src/libawkward/util.cpp" bodystart="378" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abb2590671331bab7477b8d601600f1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toindex, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="382" column="5" bodyfile="src/libawkward/util.cpp" bodystart="382" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a99fc644fac801537e856bfbb5e0c4cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="387" column="5" bodyfile="src/libawkward/util.cpp" bodystart="387" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5600742dbc7116f452ac2b460d0c1424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="391" column="5" bodyfile="src/libawkward/util.cpp" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a4704aaa89fde12845d0fe9027dd8be05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="395" column="5" bodyfile="src/libawkward/util.cpp" bodystart="395" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac0ef1572a678d80a83fcb5980eb344cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int32_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="400" column="5" bodyfile="src/libawkward/util.cpp" bodystart="400" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a07aa69687919af479d328c04d598a4ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const uint32_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="404" column="5" bodyfile="src/libawkward/util.cpp" bodystart="404" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a87bf82ce8f0f2d3603c836d25ea718c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="408" column="5" bodyfile="src/libawkward/util.cpp" bodystart="408" bodyend="410"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/libawkward/util.cpp"/>
  </compounddef>
</doxygen>
