<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="libawkward_2util_8cpp" kind="file" language="C++">
    <compoundname>util.cpp</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">sstream</includes>
    <includes local="no">set</includes>
    <includes local="yes">rapidjson/document.h</includes>
    <includes local="yes">awkward/cpu-kernels/identities.h</includes>
    <includes local="yes">awkward/cpu-kernels/getitem.h</includes>
    <includes local="yes">awkward/cpu-kernels/operations.h</includes>
    <includes local="yes">awkward/util.h</includes>
    <includes local="yes">awkward/Identities.h</includes>
    <incdepgraph>
      <node id="8">
        <label>awkward/cpu-kernels/operations.h</label>
      </node>
      <node id="1">
        <label>src/libawkward/util.cpp</label>
        <link refid="libawkward_2util_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>awkward/util.h</label>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>awkward/cpu-kernels/getitem.h</label>
      </node>
      <node id="5">
        <label>rapidjson/document.h</label>
      </node>
      <node id="6">
        <label>awkward/cpu-kernels/identities.h</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>awkward/Identities.h</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceawkward">awkward</innernamespace>
    <innernamespace refid="namespaceawkward_1_1util">awkward::util</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceawkward_1_1util_1adc0d3895bb817ea7a6ce153a4b20b6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>IndexOf&lt; T &gt;</type>
        <definition>IndexOf&lt;T&gt; awkward::util::make_starts</definition>
        <argsstring>(const IndexOf&lt; T &gt; &amp;offsets)</argsstring>
        <name>make_starts</name>
        <param>
          <type>const IndexOf&lt; T &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="21" column="13" bodyfile="src/libawkward/util.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a08466604377b6600caea88e21ac327a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>IndexOf&lt; T &gt;</type>
        <definition>IndexOf&lt;T&gt; awkward::util::make_stops</definition>
        <argsstring>(const IndexOf&lt; T &gt; &amp;offsets)</argsstring>
        <name>make_stops</name>
        <param>
          <type>const IndexOf&lt; T &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="26" column="13" bodyfile="src/libawkward/util.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1adfee0f715c73df2c9b1cdb9c083dd6a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template IndexOf&lt; int32_t &gt;</type>
        <definition>template IndexOf&lt;int32_t&gt; awkward::util::make_starts</definition>
        <argsstring>(const IndexOf&lt; int32_t &gt; &amp;offsets)</argsstring>
        <name>make_starts</name>
        <param>
          <type>const IndexOf&lt; int32_t &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="30" column="22" declfile="src/libawkward/util.cpp" declline="30" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a4c05e2e86c2390afbdd8ea9066b525bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template IndexOf&lt; uint32_t &gt;</type>
        <definition>template IndexOf&lt;uint32_t&gt; awkward::util::make_starts</definition>
        <argsstring>(const IndexOf&lt; uint32_t &gt; &amp;offsets)</argsstring>
        <name>make_starts</name>
        <param>
          <type>const IndexOf&lt; uint32_t &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="31" column="22" declfile="src/libawkward/util.cpp" declline="31" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5ff848a017b27f7cbb1e3eb16afa4243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template IndexOf&lt; int64_t &gt;</type>
        <definition>template IndexOf&lt;int64_t&gt; awkward::util::make_starts</definition>
        <argsstring>(const IndexOf&lt; int64_t &gt; &amp;offsets)</argsstring>
        <name>make_starts</name>
        <param>
          <type>const IndexOf&lt; int64_t &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="32" column="22" declfile="src/libawkward/util.cpp" declline="32" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a688a97e3c0ad0e99d271b6f3b031044c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template IndexOf&lt; int32_t &gt;</type>
        <definition>template IndexOf&lt;int32_t&gt; awkward::util::make_stops</definition>
        <argsstring>(const IndexOf&lt; int32_t &gt; &amp;offsets)</argsstring>
        <name>make_stops</name>
        <param>
          <type>const IndexOf&lt; int32_t &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="33" column="22" declfile="src/libawkward/util.cpp" declline="33" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab4eef86d482f70341146c782730db727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template IndexOf&lt; uint32_t &gt;</type>
        <definition>template IndexOf&lt;uint32_t&gt; awkward::util::make_stops</definition>
        <argsstring>(const IndexOf&lt; uint32_t &gt; &amp;offsets)</argsstring>
        <name>make_stops</name>
        <param>
          <type>const IndexOf&lt; uint32_t &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="34" column="22" declfile="src/libawkward/util.cpp" declline="34" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af69bf0b16eb4c92c557ef8319a885e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template IndexOf&lt; int64_t &gt;</type>
        <definition>template IndexOf&lt;int64_t&gt; awkward::util::make_stops</definition>
        <argsstring>(const IndexOf&lt; int64_t &gt; &amp;offsets)</argsstring>
        <name>make_stops</name>
        <param>
          <type>const IndexOf&lt; int64_t &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="35" column="22" declfile="src/libawkward/util.cpp" declline="35" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a59e9e406e10c16cbe5a43e297fac511d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; RecordLookup &gt;</type>
        <definition>std::shared_ptr&lt;RecordLookup&gt; awkward::util::init_recordlookup</definition>
        <argsstring>(int64_t numfields)</argsstring>
        <name>init_recordlookup</name>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="37" column="21" bodyfile="src/libawkward/util.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a60c549ed8a8040819b34954813813fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t awkward::util::fieldindex</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, const std::string &amp;key, int64_t numfields)</argsstring>
        <name>fieldindex</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="45" column="13" bodyfile="src/libawkward/util.cpp" bodystart="45" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a96d7483cb27ab5c1a85412fa5348528d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string awkward::util::key</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, int64_t fieldindex, int64_t numfields)</argsstring>
        <name>key</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fieldindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="69" column="23" bodyfile="src/libawkward/util.cpp" bodystart="69" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7edf467c33f32026419e65ef0b80e712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::haskey</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, const std::string &amp;key, int64_t numfields)</argsstring>
        <name>haskey</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="81" column="10" bodyfile="src/libawkward/util.cpp" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5a6b04fdbf7f630a775ec95c968a12d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt;</type>
        <definition>const std::vector&lt;std::string&gt; awkward::util::keys</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, int64_t numfields)</argsstring>
        <name>keys</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="91" column="23" bodyfile="src/libawkward/util.cpp" bodystart="91" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad26802b2772a48bb0589859e3c138100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::parameter_equals</definition>
        <argsstring>(const Parameters &amp;parameters, const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>parameter_equals</name>
        <param>
          <type>const Parameters &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="105" column="10" bodyfile="src/libawkward/util.cpp" bodystart="105" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa515755f3ae5039f0e9ea330e823ac37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::parameters_equal</definition>
        <argsstring>(const Parameters &amp;self, const Parameters &amp;other)</argsstring>
        <name>parameters_equal</name>
        <param>
          <type>const Parameters &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const Parameters &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="121" column="10" bodyfile="src/libawkward/util.cpp" bodystart="121" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0c0ee9730e162bb57e17694a503dafa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void awkward::util::handle_error</definition>
        <argsstring>(const struct Error &amp;err, const std::string &amp;classname, const Identities *identities)</argsstring>
        <name>handle_error</name>
        <param>
          <type>const struct Error &amp;</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>classname</declname>
        </param>
        <param>
          <type>const Identities *</type>
          <declname>identities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="139" column="10" bodyfile="src/libawkward/util.cpp" bodystart="139" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a945d62c19d05d0598581fbae333c8fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string awkward::util::quote</definition>
        <argsstring>(const std::string &amp;x, bool doublequote)</argsstring>
        <name>quote</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>doublequote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="160" column="17" bodyfile="src/libawkward/util.cpp" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a615ff48b62091268459c1c8b3a65bc45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::subset</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;super, const std::vector&lt; std::string &gt; &amp;sub)</argsstring>
        <name>subset</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>super</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="170" column="10" bodyfile="src/libawkward/util.cpp" bodystart="170" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad4352d8063234b998dd37ce07ef7f2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listoffsetarray&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toptr, const int32_t *fromptr, const int32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listoffsetarray&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="190" column="5" bodyfile="src/libawkward/util.cpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1a1ba05a1b4bda3c2b732f28e49f206d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listoffsetarray&lt; uint32_t &gt;</definition>
        <argsstring>(int32_t *toptr, const int32_t *fromptr, const uint32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listoffsetarray&lt; uint32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="194" column="5" bodyfile="src/libawkward/util.cpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5a353297f9bab69daf3bbbe1593e4821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listoffsetarray&lt; int64_t &gt;</definition>
        <argsstring>(int32_t *toptr, const int32_t *fromptr, const int64_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listoffsetarray&lt; int64_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="198" column="5" bodyfile="src/libawkward/util.cpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac342ae0d10448aa6aa21ba1e0b2c3960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listoffsetarray&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const int32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listoffsetarray&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="202" column="5" bodyfile="src/libawkward/util.cpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35cbb19ed4389f759b25ecc694448ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listoffsetarray&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const uint32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listoffsetarray&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="206" column="5" bodyfile="src/libawkward/util.cpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a73949ff843b38ba437f19732c876ca24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listoffsetarray&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const int64_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listoffsetarray&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="210" column="5" bodyfile="src/libawkward/util.cpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aadcb21355a633d3087042a614f32538a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listarray&lt; int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int32_t *fromstarts, const int32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listarray&lt; int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="215" column="5" bodyfile="src/libawkward/util.cpp" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9a50f10c8940b929bbeba55461eab257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listarray&lt; uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listarray&lt; uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="219" column="5" bodyfile="src/libawkward/util.cpp" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9e616b5afd79e85c54a00141e2763ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listarray&lt; int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int64_t *fromstarts, const int64_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listarray&lt; int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="223" column="5" bodyfile="src/libawkward/util.cpp" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a80843bccda3bca0ea11164d69118ef16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listarray&lt; int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int32_t *fromstarts, const int32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listarray&lt; int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="227" column="5" bodyfile="src/libawkward/util.cpp" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9a0312f5cb1b37672e5bb0c955974013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listarray&lt; uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listarray&lt; uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="231" column="5" bodyfile="src/libawkward/util.cpp" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a8ca51f647e9acc326b8ce3fdd3c7743d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listarray&lt; int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int64_t *fromstarts, const int64_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listarray&lt; int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="235" column="5" bodyfile="src/libawkward/util.cpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a301f2ab2068ab5309d9588a471558898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_indexedarray&lt; int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int32_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_indexedarray&lt; int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="240" column="5" bodyfile="src/libawkward/util.cpp" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9d3c35ba5e99e89bb853df7db5cd60db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_indexedarray&lt; uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const uint32_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_indexedarray&lt; uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="244" column="5" bodyfile="src/libawkward/util.cpp" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a37e0b3df6f007f51ad9d5d3c3ac1c809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_indexedarray&lt; int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int64_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_indexedarray&lt; int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="248" column="5" bodyfile="src/libawkward/util.cpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6c4572cfdb8c86623b7df41102582725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_indexedarray&lt; int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int32_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_indexedarray&lt; int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="252" column="5" bodyfile="src/libawkward/util.cpp" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a59083eaa2076a08a1a3b964e3989b073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_indexedarray&lt; uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const uint32_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_indexedarray&lt; uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="256" column="5" bodyfile="src/libawkward/util.cpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1d4645612b557477e677d18e8638aa58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_indexedarray&lt; int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int64_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_indexedarray&lt; int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="260" column="5" bodyfile="src/libawkward/util.cpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ace78203a25d8ea01e7b51d1ce8f5e398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_unionarray&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int8_t *fromtags, const int32_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities32_from_unionarray&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="265" column="5" bodyfile="src/libawkward/util.cpp" bodystart="265" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a27f63d4d502e0432a853dafdda1854a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_unionarray&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int8_t *fromtags, const uint32_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities32_from_unionarray&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="269" column="5" bodyfile="src/libawkward/util.cpp" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1a7c85bba1be2be21f0976320d1a6d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_unionarray&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int8_t *fromtags, const int64_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities32_from_unionarray&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="273" column="5" bodyfile="src/libawkward/util.cpp" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9936932cc23fde48414d1fa5e852999c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_unionarray&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int8_t *fromtags, const int32_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities64_from_unionarray&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="277" column="5" bodyfile="src/libawkward/util.cpp" bodystart="277" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a8eae722354b1eeeaffa978d3f9328130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_unionarray&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int8_t *fromtags, const uint32_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities64_from_unionarray&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="281" column="5" bodyfile="src/libawkward/util.cpp" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a502b331472d3e5de5f47f2009c3cf98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_unionarray&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int8_t *fromtags, const int64_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities64_from_unionarray&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="285" column="5" bodyfile="src/libawkward/util.cpp" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7adf29c144a4937aa86d3f2df3ef1303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; int8_t &gt;</definition>
        <argsstring>(int8_t *toindex, const int8_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; int8_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="290" column="5" bodyfile="src/libawkward/util.cpp" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af996a1de65ada59617c3e40c605dccbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t *toindex, const uint8_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="294" column="5" bodyfile="src/libawkward/util.cpp" bodystart="294" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad4ac227748eacbe86016709c46a75047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int32_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="298" column="5" bodyfile="src/libawkward/util.cpp" bodystart="298" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a44d00220c2f008c7d12b73880478b433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const uint32_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="302" column="5" bodyfile="src/libawkward/util.cpp" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7a95e10f3bba319da8344c267d4866ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="306" column="5" bodyfile="src/libawkward/util.cpp" bodystart="306" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0ee880e5bee52f8b3166b33e87e17c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; int8_t &gt;</definition>
        <argsstring>(int8_t *toindex, const int8_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; int8_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="311" column="5" bodyfile="src/libawkward/util.cpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7d628f1149fc5ac5f5e25779e887350a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t *toindex, const uint8_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="315" column="5" bodyfile="src/libawkward/util.cpp" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a07c08bbda9b809f0e4238e45e14053b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int32_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="319" column="5" bodyfile="src/libawkward/util.cpp" bodystart="319" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a63a1979429cd3d992c4d2a13517b3c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const uint32_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="323" column="5" bodyfile="src/libawkward/util.cpp" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a19b580ec6db4d848eae16e799e408c15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="327" column="5" bodyfile="src/libawkward/util.cpp" bodystart="327" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35cdf735524b577a33696b6dfbe507c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="332" column="5" bodyfile="src/libawkward/util.cpp" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a332e036036f0a2a7b6ae1ccbd5fb9328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="336" column="5" bodyfile="src/libawkward/util.cpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6669b4753da68138261314266664870f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="340" column="5" bodyfile="src/libawkward/util.cpp" bodystart="340" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af6d5697f061dd5b2bc6d6371fab63406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="345" column="5" bodyfile="src/libawkward/util.cpp" bodystart="345" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5994a80cfed68d5ca9a74ec77532eec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="349" column="5" bodyfile="src/libawkward/util.cpp" bodystart="349" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab91ff6d314c26700c4e4130b6ab4e6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="353" column="5" bodyfile="src/libawkward/util.cpp" bodystart="353" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ace2f8fb19c1c5895a11057e5f06ba44a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tooffsets, int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="358" column="5" bodyfile="src/libawkward/util.cpp" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35f040e2474502f3ebcd72814d81697d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tooffsets, int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="362" column="5" bodyfile="src/libawkward/util.cpp" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a27301acf05d62d2cddc63402f113186d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="366" column="5" bodyfile="src/libawkward/util.cpp" bodystart="366" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a821d22c5eb2612a50ccd25fad385d50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *total, const int32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="371" column="5" bodyfile="src/libawkward/util.cpp" bodystart="371" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab7818ea817b037e54c287c5e6209e8a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *total, const uint32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="375" column="5" bodyfile="src/libawkward/util.cpp" bodystart="375" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad129226cfdbe60197ecfef8bb310799d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *total, const int64_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="379" column="5" bodyfile="src/libawkward/util.cpp" bodystart="379" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a24d53416cb24aeef4b57ca3b206006f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const int32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="384" column="5" bodyfile="src/libawkward/util.cpp" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab0ff064b87b541a65ddcba92a1b2292e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const uint32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="388" column="5" bodyfile="src/libawkward/util.cpp" bodystart="388" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a55f52d86ee9c4cc0959c9d5123830143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const int64_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="392" column="5" bodyfile="src/libawkward/util.cpp" bodystart="392" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af4bc0f3e2a70ded4d83275a82befbf25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="397" column="5" bodyfile="src/libawkward/util.cpp" bodystart="397" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5ed659284b8769b5f1a86c4f80b3d91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="401" column="5" bodyfile="src/libawkward/util.cpp" bodystart="401" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1e4359f0b4b6cd14f0c3655abc01efa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="405" column="5" bodyfile="src/libawkward/util.cpp" bodystart="405" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3c9079e2d6d2eff270b7df911801b07e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="410" column="5" bodyfile="src/libawkward/util.cpp" bodystart="410" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0a5ce7851259ae74844da07ed068ab7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="414" column="5" bodyfile="src/libawkward/util.cpp" bodystart="414" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3853c79e8dfd566edb8c1c2affc70934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="418" column="5" bodyfile="src/libawkward/util.cpp" bodystart="418" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a56c8f0daa473f11d34e367c7f6d7100e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tostarts, int32_t *tostops, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="423" column="5" bodyfile="src/libawkward/util.cpp" bodystart="423" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab998cec0a24c51454bdf93e04ee173a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tostarts, uint32_t *tostops, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="427" column="5" bodyfile="src/libawkward/util.cpp" bodystart="427" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a02e137f16fe72a0671a42b43cc5bb543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tostarts, int64_t *tostops, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="431" column="5" bodyfile="src/libawkward/util.cpp" bodystart="431" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1adabbc3fd9ee2f199f2360a9abf874e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tocount, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="436" column="5" bodyfile="src/libawkward/util.cpp" bodystart="436" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aad6e08abe78d74e3b42b950b0a8dd2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tocount, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="440" column="5" bodyfile="src/libawkward/util.cpp" bodystart="440" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5c847326109e9069e99cdb789c7fa303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="444" column="5" bodyfile="src/libawkward/util.cpp" bodystart="444" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9999a0418c342ea8b55aee4aa991654c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="449" column="5" bodyfile="src/libawkward/util.cpp" bodystart="449" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a46d432cc0e7521b442c5fcfc4a1edf26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="453" column="5" bodyfile="src/libawkward/util.cpp" bodystart="453" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a45bf853853c0cf2101311be1df2731e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="457" column="5" bodyfile="src/libawkward/util.cpp" bodystart="457" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9011abd102728497c211d94920bfb870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_count&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tocount, const int32_t *fromoffsets, int64_t lenoffsets)</argsstring>
        <name>awkward_listoffsetarray_count&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenoffsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="462" column="5" bodyfile="src/libawkward/util.cpp" bodystart="462" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5cb3079cf75af8de6208d62c10aa1566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_count&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tocount, const uint32_t *fromoffsets, int64_t lenoffsets)</argsstring>
        <name>awkward_listoffsetarray_count&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenoffsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="466" column="5" bodyfile="src/libawkward/util.cpp" bodystart="466" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac977a7a5ba4794a041d7f06ba8363e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_count&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *fromoffsets, int64_t lenoffsets)</argsstring>
        <name>awkward_listoffsetarray_count&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenoffsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="470" column="5" bodyfile="src/libawkward/util.cpp" bodystart="470" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a86e5c86531c5b34834c054b87a1bb0b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_count_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int32_t *fromoffsets, int64_t lenoffsets)</argsstring>
        <name>awkward_listoffsetarray_count_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenoffsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="475" column="5" bodyfile="src/libawkward/util.cpp" bodystart="475" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9578359c36c6a02885639bb8d73e83e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_count_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const uint32_t *fromoffsets, int64_t lenoffsets)</argsstring>
        <name>awkward_listoffsetarray_count_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenoffsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="479" column="5" bodyfile="src/libawkward/util.cpp" bodystart="479" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6225be846621a546b9282b4de9d1793b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_count_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *fromoffsets, int64_t lenoffsets)</argsstring>
        <name>awkward_listoffsetarray_count_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenoffsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="483" column="5" bodyfile="src/libawkward/util.cpp" bodystart="483" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a2a273f9fb3238ffb993058f729d5217f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const int32_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="488" column="5" bodyfile="src/libawkward/util.cpp" bodystart="488" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ae684ec0bd651e580283384b4d0fc0af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const uint32_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="492" column="5" bodyfile="src/libawkward/util.cpp" bodystart="492" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0e54f351e82388b7cc08a3ba6b60655f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const int64_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="496" column="5" bodyfile="src/libawkward/util.cpp" bodystart="496" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aca5f1e14100c19931238421a073e50f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tolen, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="501" column="5" bodyfile="src/libawkward/util.cpp" bodystart="501" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a97be6a13ed51d9a183a853731d5fdd94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tolen, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="505" column="5" bodyfile="src/libawkward/util.cpp" bodystart="505" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a63f6ba29e4d11425f7b86dd5e58e579e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tolen, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="509" column="5" bodyfile="src/libawkward/util.cpp" bodystart="509" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abe23cccf3145a78dd81d4fb0ac9c3207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="514" column="5" bodyfile="src/libawkward/util.cpp" bodystart="514" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac42d6252b768793e8715a97640ad3f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="518" column="5" bodyfile="src/libawkward/util.cpp" bodystart="518" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a78332e9832f380f0f193c2c69869b01e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="522" column="5" bodyfile="src/libawkward/util.cpp" bodystart="522" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aea5171bc10a588aa86bf198071707c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_flatten_nextcarry_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_flatten_nextcarry_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="527" column="5" bodyfile="src/libawkward/util.cpp" bodystart="527" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af4a8629654a9d2470cd30a59c5b7c2ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_flatten_nextcarry_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_flatten_nextcarry_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="531" column="5" bodyfile="src/libawkward/util.cpp" bodystart="531" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abc67b80fe1a320fd621f6cf55bd36650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_flatten_nextcarry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_flatten_nextcarry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="535" column="5" bodyfile="src/libawkward/util.cpp" bodystart="535" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6af5709ef5406202a3d9af8d33b6e28f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_scale_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tostarts, int32_t *tostops, const int64_t *scale, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_scale_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="540" column="5" bodyfile="src/libawkward/util.cpp" bodystart="540" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa805009b8c87cacfb503cb3de78e6532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_scale_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tostarts, uint32_t *tostops, const int64_t *scale, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_scale_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="544" column="5" bodyfile="src/libawkward/util.cpp" bodystart="544" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad0ed3f2f9dae403935556b75c9e217e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_scale_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tostarts, int64_t *tostops, const int64_t *scale, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_scale_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="548" column="5" bodyfile="src/libawkward/util.cpp" bodystart="548" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1d56d4f9ab9c383037c991fda5370b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_numnull&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *numnull, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex)</argsstring>
        <name>awkward_indexedarray_numnull&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>numnull</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="553" column="5" bodyfile="src/libawkward/util.cpp" bodystart="553" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aee4779761624416b38184d79b086fa75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_numnull&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *numnull, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex)</argsstring>
        <name>awkward_indexedarray_numnull&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>numnull</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="557" column="5" bodyfile="src/libawkward/util.cpp" bodystart="557" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad00dafc7121e5db0300ac3402cb86ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_numnull&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *numnull, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex)</argsstring>
        <name>awkward_indexedarray_numnull&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>numnull</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="561" column="5" bodyfile="src/libawkward/util.cpp" bodystart="561" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a36e85b0bbeb595c549b2aa2de24ae42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int32_t *toindex, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="566" column="5" bodyfile="src/libawkward/util.cpp" bodystart="566" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa169949eda9e95aca7984af9535cf2a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, uint32_t *toindex, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="570" column="5" bodyfile="src/libawkward/util.cpp" bodystart="570" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abb2590671331bab7477b8d601600f1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toindex, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="574" column="5" bodyfile="src/libawkward/util.cpp" bodystart="574" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a183d62e77f4b2d0b07c17d312ce8ff8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_mask_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toindex, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_mask_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="579" column="5" bodyfile="src/libawkward/util.cpp" bodystart="579" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac95d84be9d29ed807e8469f7f36ecf6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_mask_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toindex, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_mask_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="583" column="5" bodyfile="src/libawkward/util.cpp" bodystart="583" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1afc6573bbff8594bf69d0bf313feef65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_mask_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toindex, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_mask_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="587" column="5" bodyfile="src/libawkward/util.cpp" bodystart="587" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a99fc644fac801537e856bfbb5e0c4cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="592" column="5" bodyfile="src/libawkward/util.cpp" bodystart="592" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5600742dbc7116f452ac2b460d0c1424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="596" column="5" bodyfile="src/libawkward/util.cpp" bodystart="596" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a4704aaa89fde12845d0fe9027dd8be05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="600" column="5" bodyfile="src/libawkward/util.cpp" bodystart="600" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac0ef1572a678d80a83fcb5980eb344cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int32_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="605" column="5" bodyfile="src/libawkward/util.cpp" bodystart="605" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a07aa69687919af479d328c04d598a4ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const uint32_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="609" column="5" bodyfile="src/libawkward/util.cpp" bodystart="609" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a87bf82ce8f0f2d3603c836d25ea718c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="613" column="5" bodyfile="src/libawkward/util.cpp" bodystart="613" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abf9bedcb6b79db14d9da2389556752da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_overlay_mask8_to64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int8_t *mask, int64_t maskoffset, const int32_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_overlay_mask8_to64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>maskoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="618" column="5" bodyfile="src/libawkward/util.cpp" bodystart="618" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6b1d9ccd2b0da9505b67346f24253c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_overlay_mask8_to64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int8_t *mask, int64_t maskoffset, const uint32_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_overlay_mask8_to64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>maskoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="622" column="5" bodyfile="src/libawkward/util.cpp" bodystart="622" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a4eea55d58a83b54dbf6b9f6d732bdb1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_overlay_mask8_to64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int8_t *mask, int64_t maskoffset, const int64_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_overlay_mask8_to64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>maskoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="626" column="5" bodyfile="src/libawkward/util.cpp" bodystart="626" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a129337f8f720c7807a583738594c3a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_mask8&lt; int32_t &gt;</definition>
        <argsstring>(int8_t *tomask, const int32_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_mask8&lt; int32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>tomask</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="631" column="5" bodyfile="src/libawkward/util.cpp" bodystart="631" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a71dd8625360202ced6b3f5ee2f1b2787" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_mask8&lt; uint32_t &gt;</definition>
        <argsstring>(int8_t *tomask, const uint32_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_mask8&lt; uint32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>tomask</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="635" column="5" bodyfile="src/libawkward/util.cpp" bodystart="635" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9ff967888a43955b891c6b9cdb8698d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_mask8&lt; int64_t &gt;</definition>
        <argsstring>(int8_t *tomask, const int64_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_mask8&lt; int64_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>tomask</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="639" column="5" bodyfile="src/libawkward/util.cpp" bodystart="639" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a88a438b9eb747a02171bac266be5f9cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplify32_to64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int32_t *outerindex, int64_t outeroffset, int64_t outerlength, const int32_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplify32_to64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="644" column="5" bodyfile="src/libawkward/util.cpp" bodystart="644" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a18b7022f70be429fea35bea98ef79e02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplify32_to64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toindex, const uint32_t *outerindex, int64_t outeroffset, int64_t outerlength, const int32_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplify32_to64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="648" column="5" bodyfile="src/libawkward/util.cpp" bodystart="648" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a707c59dba2682752ad086b98d5709a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplify32_to64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *outerindex, int64_t outeroffset, int64_t outerlength, const int32_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplify32_to64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="652" column="5" bodyfile="src/libawkward/util.cpp" bodystart="652" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a2e6322a4eddbb5762c143666e6ac0b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplifyU32_to64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int32_t *outerindex, int64_t outeroffset, int64_t outerlength, const uint32_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplifyU32_to64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="657" column="5" bodyfile="src/libawkward/util.cpp" bodystart="657" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abda85e1857511179f000dc9496021ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplifyU32_to64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toindex, const uint32_t *outerindex, int64_t outeroffset, int64_t outerlength, const uint32_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplifyU32_to64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="661" column="5" bodyfile="src/libawkward/util.cpp" bodystart="661" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abd2c94ba7aa4ea3fe2d9cca1b8c3ea62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplifyU32_to64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *outerindex, int64_t outeroffset, int64_t outerlength, const uint32_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplifyU32_to64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="665" column="5" bodyfile="src/libawkward/util.cpp" bodystart="665" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ae2dddde4deda00ebf7addbb62e393394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplify64_to64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int32_t *outerindex, int64_t outeroffset, int64_t outerlength, const int64_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplify64_to64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="670" column="5" bodyfile="src/libawkward/util.cpp" bodystart="670" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a92bfeedb5434af46f132b885244906c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplify64_to64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toindex, const uint32_t *outerindex, int64_t outeroffset, int64_t outerlength, const int64_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplify64_to64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="674" column="5" bodyfile="src/libawkward/util.cpp" bodystart="674" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad138fd3bfacdfec9687d70e2307caa99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_simplify64_to64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *outerindex, int64_t outeroffset, int64_t outerlength, const int64_t *innerindex, int64_t inneroffset, int64_t innerlength)</argsstring>
        <name>awkward_indexedarray_simplify64_to64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outeroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerlength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inneroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="678" column="5" bodyfile="src/libawkward/util.cpp" bodystart="678" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac3b9777f92b6e13bd33992e6b97e2f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_regular_index&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int8_t *fromtags, int64_t tagsoffset, int64_t length)</argsstring>
        <name>awkward_unionarray_regular_index&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="683" column="5" bodyfile="src/libawkward/util.cpp" bodystart="683" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab870db03f58650d908b8ed888715fd19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_regular_index&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const int8_t *fromtags, int64_t tagsoffset, int64_t length)</argsstring>
        <name>awkward_unionarray_regular_index&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="687" column="5" bodyfile="src/libawkward/util.cpp" bodystart="687" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a64e129867d99882e5980c349cba0b2d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_regular_index&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int8_t *fromtags, int64_t tagsoffset, int64_t length)</argsstring>
        <name>awkward_unionarray_regular_index&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="691" column="5" bodyfile="src/libawkward/util.cpp" bodystart="691" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a8dd65f3dcbf96ba8bbd6c10d33f1d300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_project_64&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(int64_t *lenout, int64_t *tocarry, const int8_t *fromtags, int64_t tagsoffset, const int32_t *fromindex, int64_t indexoffset, int64_t length, int64_t which)</argsstring>
        <name>awkward_unionarray_project_64&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>lenout</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="696" column="5" bodyfile="src/libawkward/util.cpp" bodystart="696" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac1c425e7d63a6ad035abd0187168bb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_project_64&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(int64_t *lenout, int64_t *tocarry, const int8_t *fromtags, int64_t tagsoffset, const uint32_t *fromindex, int64_t indexoffset, int64_t length, int64_t which)</argsstring>
        <name>awkward_unionarray_project_64&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>lenout</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="700" column="5" bodyfile="src/libawkward/util.cpp" bodystart="700" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa5ea37295fef6c9d842566d7ec2e54e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_project_64&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(int64_t *lenout, int64_t *tocarry, const int8_t *fromtags, int64_t tagsoffset, const int64_t *fromindex, int64_t indexoffset, int64_t length, int64_t which)</argsstring>
        <name>awkward_unionarray_project_64&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>lenout</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="704" column="5" bodyfile="src/libawkward/util.cpp" bodystart="704" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a98286d30d2e0ee8d76f9e451e0760270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const int32_t *fromstarts, const int32_t *fromstops, int64_t startsoffset, int64_t stopsoffset, int64_t length)</argsstring>
        <name>awkward_listarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="709" column="11" bodyfile="src/libawkward/util.cpp" bodystart="709" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0a69a760910f1ccbec8fb3c9d7787eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t startsoffset, int64_t stopsoffset, int64_t length)</argsstring>
        <name>awkward_listarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="713" column="11" bodyfile="src/libawkward/util.cpp" bodystart="713" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a232ff4f26765f9c9a3ac0fb1b398eea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const int64_t *fromstarts, const int64_t *fromstops, int64_t startsoffset, int64_t stopsoffset, int64_t length)</argsstring>
        <name>awkward_listarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="717" column="11" bodyfile="src/libawkward/util.cpp" bodystart="717" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa81b223ffcf1323fd99e4d4d6a58f9d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const int32_t *fromoffsets, int64_t offsetsoffset, int64_t length)</argsstring>
        <name>awkward_listoffsetarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="722" column="11" bodyfile="src/libawkward/util.cpp" bodystart="722" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aef109a4ffb66b1fb9c69e1bb4659b448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const uint32_t *fromoffsets, int64_t offsetsoffset, int64_t length)</argsstring>
        <name>awkward_listoffsetarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="726" column="11" bodyfile="src/libawkward/util.cpp" bodystart="726" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa1191c09bf3e10f0fb3d3705b354915c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t length)</argsstring>
        <name>awkward_listoffsetarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="730" column="11" bodyfile="src/libawkward/util.cpp" bodystart="730" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a949612d5395bfa3cf67963c989ec7664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_broadcast_tooffsets64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength, const int32_t *fromstarts, int64_t startsoffset, const int32_t *fromstops, int64_t stopsoffset, int64_t lencontent)</argsstring>
        <name>awkward_listarray_broadcast_tooffsets64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="735" column="5" bodyfile="src/libawkward/util.cpp" bodystart="735" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a33a26bd5f621bc7081343a2abbe81a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_broadcast_tooffsets64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength, const uint32_t *fromstarts, int64_t startsoffset, const uint32_t *fromstops, int64_t stopsoffset, int64_t lencontent)</argsstring>
        <name>awkward_listarray_broadcast_tooffsets64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="739" column="5" bodyfile="src/libawkward/util.cpp" bodystart="739" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9af3033d5ded2f5940050a45b2af1806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_broadcast_tooffsets64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength, const int64_t *fromstarts, int64_t startsoffset, const int64_t *fromstops, int64_t stopsoffset, int64_t lencontent)</argsstring>
        <name>awkward_listarray_broadcast_tooffsets64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="743" column="5" bodyfile="src/libawkward/util.cpp" bodystart="743" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0abcdec05817d1187c0e2d977152cc43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_toRegularArray&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *size, const int32_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength)</argsstring>
        <name>awkward_listoffsetarray_toRegularArray&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="748" column="5" bodyfile="src/libawkward/util.cpp" bodystart="748" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af052edb47f8e90ca316ee33f94124c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_toRegularArray&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *size, const uint32_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength)</argsstring>
        <name>awkward_listoffsetarray_toRegularArray&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="752" column="5" bodyfile="src/libawkward/util.cpp" bodystart="752" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a19395eb769eae75ccb47610c5519fec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_toRegularArray</definition>
        <argsstring>(int64_t *size, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength)</argsstring>
        <name>awkward_listoffsetarray_toRegularArray</name>
        <param>
          <type>int64_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="756" column="11" bodyfile="src/libawkward/util.cpp" bodystart="756" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad36dc1700d0a0ee5cafee7bb718e9981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_32_to8_64&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const int32_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const int32_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_32_to8_64&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="761" column="5" bodyfile="src/libawkward/util.cpp" bodystart="761" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1f83652eb99fd5c5bb267109cd9ac70a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_32_to8_64&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const uint32_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const int32_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_32_to8_64&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="765" column="5" bodyfile="src/libawkward/util.cpp" bodystart="765" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7801303f40323638df43531d8d6e3b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_32_to8_64&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const int64_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const int32_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_32_to8_64&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="769" column="5" bodyfile="src/libawkward/util.cpp" bodystart="769" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a39585073891eae0f1f613bdc4192360b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_U32_to8_64&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const int32_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const uint32_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_U32_to8_64&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="774" column="5" bodyfile="src/libawkward/util.cpp" bodystart="774" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a71fd2b49069b92c970849e119e72d04d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_U32_to8_64&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const uint32_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const uint32_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_U32_to8_64&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="778" column="5" bodyfile="src/libawkward/util.cpp" bodystart="778" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3928b3f26c49dca455fe92abf9424c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_U32_to8_64&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const int64_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const uint32_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_U32_to8_64&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="782" column="5" bodyfile="src/libawkward/util.cpp" bodystart="782" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab40db97ee521d0f3aa6bdd2b8168488b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_64_to8_64&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const int32_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const int64_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_64_to8_64&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="787" column="5" bodyfile="src/libawkward/util.cpp" bodystart="787" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a15057b078449862f747b85cfb1829060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_64_to8_64&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const uint32_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const int64_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_64_to8_64&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="791" column="5" bodyfile="src/libawkward/util.cpp" bodystart="791" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad908645e6e3fa39fe5f65110d0be4994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify8_64_to8_64&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *outertags, int64_t outertagsoffset, const int64_t *outerindex, int64_t outerindexoffset, const int8_t *innertags, int64_t innertagsoffset, const int64_t *innerindex, int64_t innerindexoffset, int64_t towhich, int64_t innerwhich, int64_t outerwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify8_64_to8_64&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>outertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outertagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>outerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerindexoffset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>innertags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innertagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>innerindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>innerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>outerwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="795" column="5" bodyfile="src/libawkward/util.cpp" bodystart="795" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a837ab50d2be0b1d5762f8b0ccd58207a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify_one_to8_64&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *fromtags, int64_t fromtagsoffset, const int32_t *fromindex, int64_t fromindexoffset, int64_t towhich, int64_t fromwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify_one_to8_64&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromtagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="800" column="5" bodyfile="src/libawkward/util.cpp" bodystart="800" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad9a20b3f70e120030ea16197666df4d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify_one_to8_64&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *fromtags, int64_t fromtagsoffset, const uint32_t *fromindex, int64_t fromindexoffset, int64_t towhich, int64_t fromwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify_one_to8_64&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromtagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="804" column="5" bodyfile="src/libawkward/util.cpp" bodystart="804" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a08ae0644111d574c7508b18b308ad46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_simplify_one_to8_64&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(int8_t *totags, int64_t *toindex, const int8_t *fromtags, int64_t fromtagsoffset, const int64_t *fromindex, int64_t fromindexoffset, int64_t towhich, int64_t fromwhich, int64_t length, int64_t base)</argsstring>
        <name>awkward_unionarray_simplify_one_to8_64&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>totags</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromtagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>towhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwhich</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="808" column="5" bodyfile="src/libawkward/util.cpp" bodystart="808" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab8835d0e53f711a180838839a9cd8fc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_expand_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *multistarts, int64_t *multistops, const int64_t *singleoffsets, int64_t *tocarry, const int32_t *fromstarts, int64_t fromstartsoffset, const int32_t *fromstops, int64_t fromstopsoffset, int64_t jaggedsize, int64_t length)</argsstring>
        <name>awkward_listarray_getitem_jagged_expand_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>multistarts</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>multistops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>singleoffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>jaggedsize</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="813" column="5" bodyfile="src/libawkward/util.cpp" bodystart="813" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a4e91dcd800413f982bd8cecb88e9e142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_expand_64</definition>
        <argsstring>(int64_t *multistarts, int64_t *multistops, const int64_t *singleoffsets, int64_t *tocarry, const uint32_t *fromstarts, int64_t fromstartsoffset, const uint32_t *fromstops, int64_t fromstopsoffset, int64_t jaggedsize, int64_t length)</argsstring>
        <name>awkward_listarray_getitem_jagged_expand_64</name>
        <param>
          <type>int64_t *</type>
          <declname>multistarts</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>multistops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>singleoffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>jaggedsize</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="817" column="11" bodyfile="src/libawkward/util.cpp" bodystart="817" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0894d2c5cd0d84d429c0947f9b33a961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_expand_64</definition>
        <argsstring>(int64_t *multistarts, int64_t *multistops, const int64_t *singleoffsets, int64_t *tocarry, const int64_t *fromstarts, int64_t fromstartsoffset, const int64_t *fromstops, int64_t fromstopsoffset, int64_t jaggedsize, int64_t length)</argsstring>
        <name>awkward_listarray_getitem_jagged_expand_64</name>
        <param>
          <type>int64_t *</type>
          <declname>multistarts</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>multistops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>singleoffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>jaggedsize</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="821" column="11" bodyfile="src/libawkward/util.cpp" bodystart="821" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a219b5ff3292ae1359bea3b897283f2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_apply_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, int64_t *tocarry, const int64_t *slicestarts, int64_t slicestartsoffset, const int64_t *slicestops, int64_t slicestopsoffset, int64_t sliceouterlen, const int64_t *sliceindex, int64_t sliceindexoffset, int64_t sliceinnerlen, const int32_t *fromstarts, int64_t fromstartsoffset, const int32_t *fromstops, int64_t fromstopsoffset, int64_t contentlen)</argsstring>
        <name>awkward_listarray_getitem_jagged_apply_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceouterlen</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>sliceindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceinnerlen</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>contentlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="826" column="5" bodyfile="src/libawkward/util.cpp" bodystart="826" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad65a9b68eca888883d741e1ac4e38201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_apply_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, int64_t *tocarry, const int64_t *slicestarts, int64_t slicestartsoffset, const int64_t *slicestops, int64_t slicestopsoffset, int64_t sliceouterlen, const int64_t *sliceindex, int64_t sliceindexoffset, int64_t sliceinnerlen, const uint32_t *fromstarts, int64_t fromstartsoffset, const uint32_t *fromstops, int64_t fromstopsoffset, int64_t contentlen)</argsstring>
        <name>awkward_listarray_getitem_jagged_apply_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceouterlen</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>sliceindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceinnerlen</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>contentlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="830" column="5" bodyfile="src/libawkward/util.cpp" bodystart="830" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad792e95a69f3ec1fb214122fa323f57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_apply_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, int64_t *tocarry, const int64_t *slicestarts, int64_t slicestartsoffset, const int64_t *slicestops, int64_t slicestopsoffset, int64_t sliceouterlen, const int64_t *sliceindex, int64_t sliceindexoffset, int64_t sliceinnerlen, const int64_t *fromstarts, int64_t fromstartsoffset, const int64_t *fromstops, int64_t fromstopsoffset, int64_t contentlen)</argsstring>
        <name>awkward_listarray_getitem_jagged_apply_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceouterlen</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>sliceindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceinnerlen</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>contentlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="834" column="5" bodyfile="src/libawkward/util.cpp" bodystart="834" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a905b75d9455bde8fd4a48c38b2dd1bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_descend_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, const int64_t *slicestarts, int64_t slicestartsoffset, const int64_t *slicestops, int64_t slicestopsoffset, int64_t sliceouterlen, const int32_t *fromstarts, int64_t fromstartsoffset, const int32_t *fromstops, int64_t fromstopsoffset)</argsstring>
        <name>awkward_listarray_getitem_jagged_descend_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceouterlen</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="839" column="5" bodyfile="src/libawkward/util.cpp" bodystart="839" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab1118916f522deee3a8806cfcb1b78ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_descend_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, const int64_t *slicestarts, int64_t slicestartsoffset, const int64_t *slicestops, int64_t slicestopsoffset, int64_t sliceouterlen, const uint32_t *fromstarts, int64_t fromstartsoffset, const uint32_t *fromstops, int64_t fromstopsoffset)</argsstring>
        <name>awkward_listarray_getitem_jagged_descend_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceouterlen</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="843" column="5" bodyfile="src/libawkward/util.cpp" bodystart="843" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a8476b6eb6fe123a759a1f52993465c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_jagged_descend_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, const int64_t *slicestarts, int64_t slicestartsoffset, const int64_t *slicestops, int64_t slicestopsoffset, int64_t sliceouterlen, const int64_t *fromstarts, int64_t fromstartsoffset, const int64_t *fromstops, int64_t fromstopsoffset)</argsstring>
        <name>awkward_listarray_getitem_jagged_descend_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>slicestops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>slicestopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sliceouterlen</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstartsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromstopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="847" column="5" bodyfile="src/libawkward/util.cpp" bodystart="847" bodyend="849"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/libawkward/util.cpp"/>
  </compounddef>
</doxygen>
