- name: awkward_ListArray_getitem_jagged_numvalid
  specializations:
    - name: awkward_ListArray_getitem_jagged_numvalid_64
      args:
        - numvalid: List[int64_t]
        - slicestarts: List[int64_t]
        - slicestartsoffset: int64_t
        - slicestops: List[int64_t]
        - slicestopsoffset: int64_t
        - length: int64_t
        - missing: List[int64_t]
        - missingoffset: int64_t
        - missinglength: int64_t
  inparams: ['slicestarts', 'slicestartsoffset', 'slicestops', 'slicestopsoffset', 'length', 'missing', 'missingoffset', 'missinglength']
  outparams: ['numvalid']
  definition: |
    def awkward_ListArray_getitem_jagged_numvalid(
        numvalid,
        slicestarts,
        slicestartsoffset,
        slicestops,
        slicestopsoffset,
        length,
        missing,
        missingoffset,
        missinglength,
    ):
        numvalid[0] = 0
        for i in range(length):
            slicestart = slicestarts[slicestartsoffset + i]
            slicestop = slicestops[slicestopsoffset + i]
            if slicestart != slicestop:
                if slicestop < slicestart:
                    raise ValueError("jagged slice's stops[i] < starts[i]")
                if slicestop > missinglength:
                    raise ValueError("jagged slice's offsets extend beyond its content")
                for j in range(slicestart, slicestop):
                    numvalid[0] = numvalid[0] + 1 if missing[missingoffset + j] >= 0 else 0
