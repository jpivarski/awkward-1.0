- name: awkward_ListArray_getitem_next_range_spreadadvanced
  specializations:
    - name: awkward_ListArrayU32_getitem_next_range_spreadadvanced_64
      args:
        - toadvanced: List[int64_t]
        - fromadvanced: List[int64_t]
        - fromoffsets: List[uint32_t]
        - lenstarts: int64_t
    - name: awkward_ListArray64_getitem_next_range_spreadadvanced_64
      args:
        - toadvanced: List[int64_t]
        - fromadvanced: List[int64_t]
        - fromoffsets: List[int64_t]
        - lenstarts: int64_t
    - name: awkward_ListArray32_getitem_next_range_spreadadvanced_64
      args:
        - toadvanced: List[int64_t]
        - fromadvanced: List[int64_t]
        - fromoffsets: List[int32_t]
        - lenstarts: int64_t
  inparams: ['fromadvanced', 'fromoffsets', 'lenstarts']
  outparams: ['toadvanced']
  definition: |
    def awkward_ListArray_getitem_next_range_spreadadvanced(
        toadvanced, fromadvanced, fromoffsets, lenstarts
    ):
        for i in range(lenstarts):
            count = fromoffsets[i + 1] - fromoffsets[i]
            for j in range(count):
                toadvanced[fromoffsets[i] + j] = fromadvanced[i]
  tests:
    - args:
        toadvanced: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        fromadvanced: [2, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1]
        fromoffsets: [1, 2, 3, 4, 5, 6]
        lenstarts: 3
      successful: True
      results:
        toadvanced: [0, 2, 0, 2]
    - args:
        toadvanced: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        fromadvanced: [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]
        fromoffsets: [1, 2, 3, 4, 5, 6]
        lenstarts: 3
      successful: True
      results:
        toadvanced: [0, 1, 0, 0]
