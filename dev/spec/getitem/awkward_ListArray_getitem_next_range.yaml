- name: awkward_ListArray_getitem_next_range
  specializations:
    - name: awkward_ListArray64_getitem_next_range_64
      args:
        - tooffsets: List[int64_t]
        - tocarry: List[int64_t]
        - fromstarts: List[int64_t]
        - fromstops: List[int64_t]
        - lenstarts: int64_t
        - startsoffset: int64_t
        - stopsoffset: int64_t
        - start: int64_t
        - stop: int64_t
        - step: int64_t
    - name: awkward_ListArray32_getitem_next_range_64
      args:
        - tooffsets: List[int32_t]
        - tocarry: List[int64_t]
        - fromstarts: List[int32_t]
        - fromstops: List[int32_t]
        - lenstarts: int64_t
        - startsoffset: int64_t
        - stopsoffset: int64_t
        - start: int64_t
        - stop: int64_t
        - step: int64_t
    - name: awkward_ListArrayU32_getitem_next_range_64
      args:
        - tooffsets: List[uint32_t]
        - tocarry: List[int64_t]
        - fromstarts: List[uint32_t]
        - fromstops: List[uint32_t]
        - lenstarts: int64_t
        - startsoffset: int64_t
        - stopsoffset: int64_t
        - start: int64_t
        - stop: int64_t
        - step: int64_t
  inparams: ['fromstarts', 'fromstops', 'lenstarts', 'startsoffset', 'stopsoffset', 'start', 'stop', 'step']
  outparams: ['tooffsets', 'tocarry']
  definition: |
    def awkward_ListArray_getitem_next_range(
        tooffsets,
        tocarry,
        fromstarts,
        fromstops,
        lenstarts,
        startsoffset,
        stopsoffset,
        start,
        stop,
        step,
    ):
        k = 0
        tooffsets[0] = 0
        if step > 0:
            for i in range(lenstarts):
                length = fromstops[stopsoffset + i] - fromstarts[startsoffset + i]
                regular_start = start
                regular_stop = stop
                awkward_regularize_rangeslice(
                    regular_start,
                    regular_stop,
                    step > 0,
                    start != kSliceNone,
                    stop != kSliceNone,
                    length,
                )
                j = regular_start
                while j < regular_stop:
                    tocarry[k] = fromstarts[startsoffset + i] + j
                    k = k + 1
                    j += step
                tooffsets[i + 1] = float(k)
        else:
            for i in range(lenstarts):
                length = fromstops[stopsoffset + i] - fromstarts[startsoffset + i]
                regular_start = start
                regular_stop = stop
                awkward_regularize_rangeslice(
                    regular_start,
                    regular_stop,
                    step > 0,
                    start != kSliceNone,
                    stop != kSliceNone,
                    length,
                )
                j = regular_start
                while j > regular_stop:
                    tocarry[k] = fromstarts[startsoffset + i] + j
                    k = k + 1
                    j += step
                tooffsets[i + 1] = float(k)
