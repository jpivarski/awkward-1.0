- name: awkward_NumpyArray_getitem_boolean_nonzero
  specializations:
    - name: awkward_NumpyArray_getitem_boolean_nonzero_64
      args:
        - toptr: List[int64_t]
        - fromptr: List[int8_t]
        - byteoffset: int64_t
        - length: int64_t
        - stride: int64_t
  inparams: ['fromptr', 'byteoffset', 'length', 'stride']
  outparams: ['toptr']
  definition: |
    def awkward_NumpyArray_getitem_boolean_nonzero(
        toptr, fromptr, byteoffset, length, stride
    ):
        k = 0
        i = 0
        while i < length:
            if fromptr[byteoffset + i] != 0:
                toptr[k] = i
                k = k + 1
            i += stride
  tests:
    - args:
        toptr: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        fromptr: [5, 8, 7, 0, 8, 6, 12, 7, 4, 6, 8, 7, 8, 4, 4, 4, 9, 10, 6, 5, 3, 5, 7, 5, 3]
        byteoffset: 0
        length: 4
        stride: 4
      successful: True
      results:
        toptr: [0]
    - args:
        toptr: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        fromptr: [2, 1, 4, 3, 5, 2, 10, 11, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 6, 2, 3]
        byteoffset: 0
        length: 3
        stride: 3
      successful: True
      results:
        toptr: [0]
