- name: awkward_ListOffsetArray_getitem_adjust_offsets_index
  specializations:
    - name: awkward_ListOffsetArray_getitem_adjust_offsets_index_64
      args:
        - tooffsets: List[int64_t]
        - tononzero: List[int64_t]
        - fromoffsets: List[int64_t]
        - offsetsoffset: int64_t
        - length: int64_t
        - index: List[int64_t]
        - indexoffset: int64_t
        - indexlength: int64_t
        - nonzero: List[int64_t]
        - nonzerooffset: int64_t
        - nonzerolength: int64_t
        - originalmask: List[int8_t]
        - maskoffset: int64_t
        - masklength: int64_t
  inparams: ['fromoffsets', 'offsetsoffset', 'length', 'index', 'indexoffset', 'indexlength', 'nonzero', 'nonzerooffset', 'nonzerolength', 'originalmask', 'maskoffset', 'masklength']
  outparams: ['tooffsets', 'tononzero']
  definition: |
    def awkward_ListOffsetArray_getitem_adjust_offsets_index(
        tooffsets,
        tononzero,
        fromoffsets,
        offsetsoffset,
        length,
        index,
        indexoffset,
        indexlength,
        nonzero,
        nonzerooffset,
        nonzerolength,
        originalmask,
        maskoffset,
        masklength,
    ):
        k = 0
        tooffsets[0] = fromoffsets[offsetsoffset + 0]
        for i in range(length):
            slicestart = fromoffsets[offsetsoffset + i]
            slicestop = fromoffsets[(offsetsoffset + i) + 1]
            numnull = 0
            for j in range(slicestart, slicestop):
                numnull += 1 if originalmask[maskoffset + j] != 0 else 0
            nullcount = 0
            count = 0
            while (k < indexlength) and (
                ((index[indexoffset + k] < 0) and (nullcount < numnull))
                or (
                    (
                        (index[indexoffset + k] >= 0)
                        and (index[indexoffset + k] < nonzerolength)
                    )
                    and (nonzero[nonzerooffset + index[indexoffset + k]] < slicestop)
                )
            ):
                if index[indexoffset + k] < 0:
                    nullcount = nullcount + 1
                else:
                    j = index[indexoffset + k]
                    tononzero[j] = nonzero[nonzerooffset + j] - slicestart
                k = k + 1
                count = count + 1
    
            tooffsets[i + 1] = tooffsets[i] + count
  tests:
    - args:
        tooffsets: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        tononzero: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        fromoffsets: [1, 1, 2, 3, 5, 8, 11, 11, 11, 11, 20, 21, 21, 21, 22, 23, 24, 26, 27, 29, 33, 34, 35, 36, 37, 38, 38, 38, 38, 38, 38, 38, 40, 40, 41, 42, 43, 44, 45, 46, 47]
        offsetsoffset: 1
        length: 4
        index: [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]
        indexoffset: 1
        indexlength: 4
        nonzero: [1, 1, 2, 3, 5, 8, 11, 11, 11, 11, 20, 21, 21, 21, 22, 23, 24, 26, 27, 29, 33, 34, 35, 36, 37, 38, 38, 38, 38, 38, 38, 38, 40, 40, 41, 42, 43, 44, 45, 46, 47]
        nonzerooffset: 1
        nonzerolength: 4
        originalmask: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        maskoffset: 0
        masklength: 4
      successful: True
      results:
        tooffsets: [1, 3, 5, 5, 5]
        tononzero: [0, 0]
    - args:
        tooffsets: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        tononzero: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        fromoffsets: [2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 15, 15, 15, 15, 15]
        offsetsoffset: 0
        length: 3
        index: [1, 1, 2, 2, 0, 2, 0, 2, 1, 1]
        indexoffset: 0
        indexlength: 3
        nonzero: [2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 15, 15, 15, 15, 15]
        nonzerooffset: 0
        nonzerolength: 3
        originalmask: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        maskoffset: 1
        masklength: 3
      successful: True
      results:
        tooffsets: [2, 2, 2, 5]
        tononzero: [0, 0, 0]
