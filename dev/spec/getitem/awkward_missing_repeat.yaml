- name: awkward_missing_repeat
  specializations:
    - name: awkward_missing_repeat_64
      args:
        - outindex: List[int64_t]
        - index: List[int64_t]
        - indexoffset: int64_t
        - indexlength: int64_t
        - repetitions: int64_t
        - regularsize: int64_t
  inparams: ['index', 'indexoffset', 'indexlength', 'repetitions', 'regularsize']
  outparams: ['outindex']
  definition: |
    def awkward_missing_repeat(
        outindex, index, indexoffset, indexlength, repetitions, regularsize
    ):
        for i in range(repetitions):
            for j in range(indexlength):
                base = index[indexoffset + j]
                outindex[(i * indexlength) + j] = base + i * regularsize if base >= 0 else 0
  tests:
    - args:
        outindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        index: [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]
        indexoffset: 1
        indexlength: 3
        repetitions: 3
        regularsize: 3
      successful: True
      results:
        outindex: [0, 0, 1, 3, 3, 4, 6, 6, 7]
    - args:
        outindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        index: [1, 1, 2, 2, 0, 2, 0, 2, 1, 1]
        indexoffset: 0
        indexlength: 3
        repetitions: 3
        regularsize: 3
      successful: True
      results:
        outindex: [1, 1, 2, 4, 4, 5, 7, 7, 8]
