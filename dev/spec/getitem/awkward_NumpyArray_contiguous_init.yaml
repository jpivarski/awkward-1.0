- name: awkward_NumpyArray_contiguous_init
  specializations:
    - name: awkward_NumpyArray_contiguous_init_64
      args:
        - toptr: List[int64_t]
        - skip: int64_t
        - stride: int64_t
  inparams: ['skip', 'stride']
  outparams: ['toptr']
  definition: |
    def awkward_NumpyArray_contiguous_init(toptr, skip, stride):
        for i in range(skip):
            toptr[i] = i * stride
  tests:
    - args:
        toptr: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        skip: 4
        stride: 4
      successful: True
      results:
        toptr: [0, 4, 8, 12]
    - args:
        toptr: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        skip: 4
        stride: 3
      successful: True
      results:
        toptr: [0, 3, 6, 9]
    - args:
        toptr: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        skip: 3
        stride: 4
      successful: True
      results:
        toptr: [0, 4, 8]
    - args:
        toptr: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        skip: 3
        stride: 3
      successful: True
      results:
        toptr: [0, 3, 6]
