- name: awkward_UnionArray_fillindex_count
  specializations:
    - name: awkward_UnionArray_fillindex_to64_count
      args:
        - toindex: List[int64_t]
        - toindexoffset: int64_t
        - length: int64_t
  inparams: ['toindexoffset', 'length']
  outparams: ['toindex']
  definition: |
    def awkward_UnionArray_fillindex_count(toindex, toindexoffset, length):
        for i in range(length):
            toindex[toindexoffset + i] = float(i)
  tests:
    - args:
        toindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        toindexoffset: 4
        length: 4
      successful: True
      results:
        toindex: [0, 0, 0, 0, 0.0, 1.0, 2.0, 3.0]
    - args:
        toindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        toindexoffset: 4
        length: 3
      successful: True
      results:
        toindex: [0, 0, 0, 0, 0.0, 1.0, 2.0]
    - args:
        toindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        toindexoffset: 3
        length: 4
      successful: True
      results:
        toindex: [0, 0, 0, 0.0, 1.0, 2.0, 3.0]
    - args:
        toindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        toindexoffset: 3
        length: 3
      successful: True
      results:
        toindex: [0, 0, 0, 0.0, 1.0, 2.0]
