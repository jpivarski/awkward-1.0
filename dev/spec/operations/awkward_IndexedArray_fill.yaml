- name: awkward_IndexedArray_fill
  specializations:
    - name: awkward_IndexedArray_fill_to64_fromU32
      args:
        - toindex: List[int64_t]
        - toindexoffset: int64_t
        - fromindex: List[uint32_t]
        - fromindexoffset: int64_t
        - length: int64_t
        - base: int64_t
    - name: awkward_IndexedArray_fill_to64_from64
      args:
        - toindex: List[int64_t]
        - toindexoffset: int64_t
        - fromindex: List[int64_t]
        - fromindexoffset: int64_t
        - length: int64_t
        - base: int64_t
    - name: awkward_IndexedArray_fill_to64_from32
      args:
        - toindex: List[int64_t]
        - toindexoffset: int64_t
        - fromindex: List[int32_t]
        - fromindexoffset: int64_t
        - length: int64_t
        - base: int64_t
  inparams: ['toindexoffset', 'fromindex', 'fromindexoffset', 'length', 'base']
  outparams: ['toindex']
  definition: |
    def awkward_IndexedArray_fill(
        toindex, toindexoffset, fromindex, fromindexoffset, length, base
    ):
        for i in range(length):
            fromval = fromindex[fromindexoffset + i]
            toindex[toindexoffset + i] = -1 if fromval < 0 else float(fromval + base)
  tests:
    - args:
        toindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        toindexoffset: 4
        fromindex: [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1]
        fromindexoffset: 1
        length: 4
        base: 4
      successful: True
      results:
        toindex: [0, 0, 0, 0, 4.0, 4.0, 5.0, 5.0]
    - args:
        toindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        toindexoffset: 3
        fromindex: [1, 1, 2, 2, 0, 2, 0, 2, 1, 1]
        fromindexoffset: 0
        length: 3
        base: 3
      successful: True
      results:
        toindex: [0, 0, 0, 4.0, 4.0, 5.0]
