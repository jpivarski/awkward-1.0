- name: awkward_UnionArray_flatten_length
  specializations:
    - name: awkward_UnionArray32_flatten_length_64
      args:
        - total_length: List[int64_t]
        - fromtags: List[int8_t]
        - fromtagsoffset: int64_t
        - fromindex: List[int32_t]
        - fromindexoffset: int64_t
        - length: int64_t
        - offsetsraws: List[List[int64_t]]
        - offsetsoffsets: List[int64_t]
    - name: awkward_UnionArray64_flatten_length_64
      args:
        - total_length: List[int64_t]
        - fromtags: List[int8_t]
        - fromtagsoffset: int64_t
        - fromindex: List[int64_t]
        - fromindexoffset: int64_t
        - length: int64_t
        - offsetsraws: List[List[int64_t]]
        - offsetsoffsets: List[int64_t]
    - name: awkward_UnionArrayU32_flatten_length_64
      args:
        - total_length: List[int64_t]
        - fromtags: List[int8_t]
        - fromtagsoffset: int64_t
        - fromindex: List[uint32_t]
        - fromindexoffset: int64_t
        - length: int64_t
        - offsetsraws: List[List[int64_t]]
        - offsetsoffsets: List[int64_t]
  inparams: ['fromtags', 'fromtagsoffset', 'fromindex', 'fromindexoffset', 'length', 'offsetsraws', 'offsetsoffsets']
  outparams: ['total_length']
  definition: |
    def awkward_UnionArray_flatten_length(
        total_length,
        fromtags,
        fromtagsoffset,
        fromindex,
        fromindexoffset,
        length,
        offsetsraws,
        offsetsoffsets,
    ):
        total_length[0] = 0
        for i in range(length):
            tag = fromtags[fromtagsoffset + i]
            idx = fromindex[fromindexoffset + i]
            start = offsetsraws[tag][offsetsoffsets[tag] + idx]
            stop = offsetsraws[tag][(offsetsoffsets[tag] + idx) + 1]
            total_length[0] = total_length[0] + (stop - start)
