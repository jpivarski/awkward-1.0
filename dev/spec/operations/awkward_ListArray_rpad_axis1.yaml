- name: awkward_ListArray_rpad_axis1
  specializations:
    - name: awkward_ListArray64_rpad_axis1_64
      args:
        - toindex: List[int64_t]
        - fromstarts: List[int64_t]
        - fromstops: List[int64_t]
        - tostarts: List[int64_t]
        - tostops: List[int64_t]
        - target: int64_t
        - length: int64_t
        - startsoffset: int64_t
        - stopsoffset: int64_t
    - name: awkward_ListArrayU32_rpad_axis1_64
      args:
        - toindex: List[int64_t]
        - fromstarts: List[uint32_t]
        - fromstops: List[uint32_t]
        - tostarts: List[uint32_t]
        - tostops: List[uint32_t]
        - target: int64_t
        - length: int64_t
        - startsoffset: int64_t
        - stopsoffset: int64_t
    - name: awkward_ListArray32_rpad_axis1_64
      args:
        - toindex: List[int64_t]
        - fromstarts: List[int32_t]
        - fromstops: List[int32_t]
        - tostarts: List[int32_t]
        - tostops: List[int32_t]
        - target: int64_t
        - length: int64_t
        - startsoffset: int64_t
        - stopsoffset: int64_t
  inparams: ['fromstarts', 'fromstops', 'target', 'length', 'startsoffset', 'stopsoffset']
  outparams: ['toindex', 'tostarts', 'tostops']
  definition: |
    def awkward_ListArray_rpad_axis1(
        toindex,
        fromstarts,
        fromstops,
        tostarts,
        tostops,
        target,
        length,
        startsoffset,
        stopsoffset,
    ):
        offset = 0
        for i in range(length):
            tostarts[i] = offset
            rangeval = fromstops[stopsoffset + i] - fromstarts[startsoffset + i]
            for j in range(rangeval):
                toindex[offset + j] = fromstarts[startsoffset + i] + j
            for j in range(rangeval, target):
                toindex[offset + j] = -1
            offset = tostarts[i] + target if target > rangeval else tostarts[i] + rangeval
            tostops[i] = offset
  tests:
    - args:
        toindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        fromstarts: [2, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 2, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 0, 2]
        fromstops: [3, 1, 3, 2, 3, 1, 2, 3]
        tostarts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        tostops: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        target: 4
        length: 4
        startsoffset: 0
        stopsoffset: 0
      successful: True
      results:
        toindex: [2, -1, -1, -1, 0, -1, -1, -1, 2, -1, -1, -1, 1, -1, -1, -1]
        tostarts: [0, 4, 8, 12]
        tostops: [4, 8, 12, 16]
    - args:
        toindex: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        fromstarts: [1, 0, 0, 0, 1, 1, 0]
        fromstops: [8, 4, 5, 6, 5, 5, 7]
        tostarts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        tostops: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        target: 3
        length: 3
        startsoffset: 1
        stopsoffset: 1
      successful: True
      results:
        toindex: [0, 1, 2, 3, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5]
        tostarts: [0, 4, 9]
        tostops: [4, 9, 15]
