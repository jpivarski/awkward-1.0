- name: awkward_IndexedArray_reduce_next_nonlocal_nextshifts_fromshifts_64
  specializations:
    - name: awkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64
      args:
        - name: nextshifts
          type: List[int64_t]
          direction: out
        - name: index
          type: Const[List[int32_t]]
          direction: in
          role: reducer-nextshifts
        - name: length
          type: int64_t
          direction: in
          role: reducer-length
        - name: shifts
          type: Const[List[int64_t]]
          direction: in
          role: reducer-shifts
    - name: awkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64
      args:
        - name: nextshifts
          type: List[int64_t]
          direction: out
        - name: index
          type: Const[List[uint32_t]]
          direction: in
          role: reducer-nextshifts
        - name: length
          type: int64_t
          direction: in
          role: reducer-length
        - name: shifts
          type: Const[List[int64_t]]
          direction: in
          role: reducer-shifts
    - name: awkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64
      args:
        - name: nextshifts
          type: List[int64_t]
          direction: out
        - name: index
          type: Const[List[int64_t]]
          direction: in
          role: reducer-nextshifts
        - name: length
          type: int64_t
          direction: in
          role: reducer-length
        - name: shifts
          type: Const[List[int64_t]]
          direction: in
          role: reducer-shifts
  definition: |
    def awkward_IndexedArray_reduce_next_nonlocal_nextshifts_fromshifts_64(nextshifts , index , length , shifts ):
        nullsum = 0
        k = 0
        for i in range(length):
            if index[i] >= 0:
                nextshifts[k] = shifts[i] + nullsum
                k = k + 1
            else:
                nullsum = nullsum + 1
  description: null