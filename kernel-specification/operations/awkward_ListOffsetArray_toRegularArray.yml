- name: awkward_ListOffsetArray_toRegularArray
  specializations:
    - name: awkward_ListOffsetArray64_toRegularArray
      args:
        - name: size
          type: List[int64_t]
          direction: out
        - name: fromoffsets
          type: Const[List[int64_t]]
          direction: in
          role: ListOffsetArray-offsets
        - name: offsetslength
          type: int64_t
          direction: in
          role: default
    - name: awkward_ListOffsetArrayU32_toRegularArray
      args:
        - name: size
          type: List[int64_t]
          direction: out
        - name: fromoffsets
          type: Const[List[uint32_t]]
          direction: in
          role: ListOffsetArray-offsets
        - name: offsetslength
          type: int64_t
          direction: in
          role: default
    - name: awkward_ListOffsetArray32_toRegularArray
      args:
        - name: size
          type: List[int64_t]
          direction: out
        - name: fromoffsets
          type: Const[List[int32_t]]
          direction: in
          role: ListOffsetArray-offsets
        - name: offsetslength
          type: int64_t
          direction: in
          role: default
  definition: |
    def awkward_ListOffsetArray_toRegularArray(size , fromoffsets , offsetslength ):
        size[0] = -1
        for i in range(offsetslength - 1):
            count = int(fromoffsets[i + 1]) - int(fromoffsets[i])
            if count < 0:
                raise ValueError("offsets must be monotonically increasing")
            if size[0] == -1:
                size[0] = count
            else:
                if size[0] != count:
                    raise ValueError("cannot convert to RegularArray because subarray lengths are not regular")
        if size[0] == -1:
            size[0] = 0
  description: null