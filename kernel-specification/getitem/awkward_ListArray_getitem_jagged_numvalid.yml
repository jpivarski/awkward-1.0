- name: awkward_ListArray_getitem_jagged_numvalid
  specializations:
    - name: awkward_ListArray_getitem_jagged_numvalid_64
      args:
        - name: numvalid
          type: List[int64_t]
          direction: out
        - name: slicestarts
          type: Const[List[int64_t]]
          direction: in
          role: ListArray-starts
        - name: slicestops
          type: Const[List[int64_t]]
          direction: in
          role: ListArray-stops
        - name: length
          type: int64_t
          direction: in
          role: default
        - name: missing
          type: Const[List[int64_t]]
          direction: in
          role: IndexedArray-index
        - name: missinglength
          type: int64_t
          direction: in
          role: IndexedArray-length
  definition: |
    def awkward_ListArray_getitem_jagged_numvalid(numvalid , slicestarts , slicestops , length , missing , missinglength ):
        numvalid[0] = 0
        for i in range(length):
            slicestart = slicestarts[i]
            slicestop = slicestops[i]
            if slicestart != slicestop:
                if slicestop < slicestart:
                    raise ValueError("jagged slice's stops[i] < starts[i]")
                if slicestop > missinglength:
                    raise ValueError("jagged slice's offsets extend beyond its content")
                for j in range(slicestart, slicestop):
                    numvalid[0] = numvalid[0] + 1 if missing[j] >= 0 else 0
  description: null